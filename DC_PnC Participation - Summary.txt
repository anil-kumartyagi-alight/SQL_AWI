--begin_date = '2024-12-01'
--end_date = <<$pAsOfDate>>

WITH mv_person
AS (
	SELECT DISTINCT global_client_id
		,global_person_id
		,client_id
		,client_id_string
		,platform_person_internal_id
		,gender
		,birth_date
		,person_reason_code
		,union_name
		,platform_id
	FROM person_rpt.person
	WHERE person_reason_code = 'Employee'
		AND begin_date <= last_day(<<$pAsOfDate>>)
		AND end_date >= last_day(<<$pAsOfDate>>)
		AND client_id =<<$pClientId>>
	)
	,mv_person_employment
AS (
	SELECT DISTINCT global_client_id
		,global_person_id
		,client_id
		,platform_person_internal_id
		,platform_id
		,expected_annual_base_salary
		,hourly_salary_status
		,fulltime_parttime_status
		--,employment_status
		,begin_date
		,end_date
		,hire_date
		,termination_date
		,standard_value AS employment_status
		,standard_employment_status_code
FROM person_rpt.person_employment pe
LEFT OUTER JOIN adlfound_itg.standard_rollups_lookup rl
	ON pe.standard_employment_status_code = rl.standard_key
	AND standard_group_key in ('EMPL-STAT-CD-ROLLUP1')
	WHERE 
		begin_date <= last_day(<<$pAsOfDate>>)
		AND end_date >= last_day(<<$pAsOfDate>>)
		AND client_id =<<$pClientId>>
	)
	,psf 
AS (
	select * from person_itg.person_security_filter 
			 where client_id =cast(<<$pClientId>> as int) 				
)
	,person
AS (
	SELECT p.global_client_id
		,p.global_person_id
		,p.client_id
		,p.client_id_string
		,p.platform_person_internal_id
		,e.expected_annual_base_salary
		,e.hourly_salary_status
		,e.fulltime_parttime_status
		,e.employment_status
		,e.standard_employment_status_code
		,p.person_reason_code
		,p.union_name
		,p.gender
		,floor(CASE 
			WHEN p.birth_date IN (
					'1800-01-01'
					,'1900-01-01'
					,'1901-01-01'
					,'1910-01-01'
					,'1930-01-01'
					)
				THEN NULL
			ELSE ROUND(DATEDIFF(DAY, p.birth_date, last_day(<<$pAsOfDate>>)) / 365.25, 2)
			END) AS age
		,CASE 
			WHEN p.person_reason_code = 'Employee'
				AND upper(e.employment_status) = 'ACTIVE'
				THEN ROUND(DATEDIFF(DAY, e.hire_date, last_day(<<$pAsOfDate>>)) / 365.25, 2)
			WHEN p.person_reason_code = 'Employee'
				AND upper(e.employment_status) <> 'ACTIVE'
				AND e.termination_date IS NOT NULL
				AND EXTRACT(YEAR FROM e.termination_date) <> 2299
				THEN ROUND(DATEDIFF(DAY, e.hire_date, e.termination_date) / 365.25, 2)
			ELSE NULL
			END AS tenure
		,row_level_security_filter_value
		,pcf.custom_filter_1
		,pcf.custom_filter_2
		,pcf.custom_filter_3
		,pcf.custom_filter_4
		,pcf.custom_filter_5
	FROM mv_person p
	inner JOIN mv_person_employment e ON p.client_id = e.client_id
		AND p.platform_person_internal_id = e.platform_person_internal_id
		AND p.platform_id = e.platform_id
		--AND p.global_client_id = e.global_client_id
		--AND p.global_person_id = e.global_person_id
		AND p.client_id =<<$pClientId>>
	left join psf on p.platform_id = psf.platform_id
		and p.platform_person_internal_id = psf.platform_person_internal_id
		and p.client_id = psf.client_id 
	
	left join person_itg.person_custom_filter pcf on p.platform_id = pcf.platform_id
		and p.platform_person_internal_id = pcf.platform_person_internal_id
		and p.client_id = pcf.client_id
		and <<$pAsOfDate>> <= pcf.end_date
		and <<$pAsOfDate>> >= pcf.begin_date
		--and pcf.client_id =cast(<<$pClientId>> as int)
		and pcf.client_id =cast(<<$pClientId>> as int)	
		and pcf.data_product = 'DC'
	)
	,PRSN_PLANSTAT_DIMN01
AS (
	SELECT a.client_id AS CLIENT_ID
		,a.platform_person_internal_id AS PRSN_INTN_ID
		,a.category_id AS CAT_ID
		,a.begin_date AS PP_STAT_EFBEG_DT
		,a.end_date AS PP_STAT_EFEND_DT
		,a.plan_status_code AS PLAN_STAT_CD
		,a.participation_status_code AS prtc_stat_cd
		,a.platform_indicator_code AS PLFM_IND_CD
		,a.plan_id AS PLAN_ID
		,b.category_type_code AS CAT_TYPE_CD
		,MAX(begin_date) OVER (
			PARTITION BY a.client_id
			,a.plan_id
			,a.platform_person_internal_id
			,a.category_id
			) AS MAX_PP_STAT_EFBEG_DT
	FROM wealth_rpt.person_planstatus_dim a
	INNER JOIN wealth_rpt.dc_category_dim b ON a.client_id = b.client_id
		AND a.category_id = b.category_id
		AND a.plan_id = b.plan_id
	WHERE
		a.platform_indicator_code IN ('R3','R4','DCE') 
		AND b.category_type_code = 'PS'
		AND last_day(<<$pAsOfDate>>) >= a.begin_date
		AND last_day(<<$pAsOfDate>>) <= a.end_date
		AND b.category_definition_brand_code = 'PRTC-STAT'
		AND a.client_id =<<$pClientId>>
	)
	,PRSN_PLANSTAT_DIMN
AS (
	SELECT DISTINCT CLIENT_ID
		,PLAN_ID
		,CAT_ID
		,PRSN_INTN_ID
		,prtc_stat_cd
		,plfm_ind_cd
		--,CAT_TYPE_CD
		,MAX_PP_STAT_EFBEG_DT
	FROM PRSN_PLANSTAT_DIMN01
	WHERE MAX_PP_STAT_EFBEG_DT = PP_STAT_EFBEG_DT
	)
	,person_planstat
AS (
	SELECT p.global_client_id
		,p.global_person_id
		,p.client_id
		,p.client_id_string
		,p.platform_person_internal_id
		,p.expected_annual_base_salary
		,p.hourly_salary_status
		,p.fulltime_parttime_status
		,p.person_reason_code
		,p.union_name
		,p.gender
		,p.employment_status
		,p.standard_employment_status_code
		,p.age
		,p.tenure
		,d.prtc_stat_cd
		,d.plfm_ind_cd
		,d.plan_id
		,p.row_level_security_filter_value
		,p.custom_filter_1
		,p.custom_filter_2
		,p.custom_filter_3
		,p.custom_filter_4
		,p.custom_filter_5
	FROM prsn_planstat_dimn d
	INNER JOIN person p ON p.client_id = d.client_id
		AND p.platform_person_internal_id = d.prsn_intn_id
	WHERE d.plfm_ind_cd IN ('R3','R4','DCE')
		--AND UPPER(TRIM(p.employment_status)) in ('TERMINATION','ACTIVE')
		--AND UPPER(TRIM(prtc_stat_cd)) = 'ACTIVE'
	)
	,dc_plan_dimn
AS (
	SELECT client_id
		,plan_brand_code as plan_brnd_cd
		,plan_long_description as plan_ldsc_tx
		,plan_type_code as plan_type_cd
		,plan_id
	FROM wealth_rpt.dc_plan_dim
	WHERE client_id =<<$pClientId>>
		AND plan_type_code = 'DC'
	)
	,person_data
AS (
	SELECT a.client_id
		,a.client_id_string
		,a.platform_person_internal_id
		,a.expected_annual_base_salary AS salary
		,a.hourly_salary_status
		,a.fulltime_parttime_status
		,a.person_reason_code
		,a.union_name
		,a.gender
		,a.employment_status
		,a.standard_employment_status_code
		,(a.age) as age
		,(a.tenure) as tenure
		,a.prtc_stat_cd
		,a.plfm_ind_cd
		,a.plan_id
		,b.plan_brnd_cd
		,b.plan_ldsc_tx
		,b.plan_type_cd
		,a.row_level_security_filter_value
		,a.custom_filter_1
		,a.custom_filter_2
		,a.custom_filter_3
		,a.custom_filter_4
		,a.custom_filter_5
	FROM person_planstat a
	LEFT JOIN dc_plan_dimn b ON a.client_id = b.client_id
		AND a.plan_id = b.plan_id
	WHERE b.plan_type_cd = 'DC'
	)
	,range_lookup
AS (
	SELECT standard_group_key
		,standard_display_name
		,standard_min
		,standard_max
		,OWNER
	FROM adlfound_itg.standard_ranges_lookup
	)
	,dc_person_attributes
AS (
	SELECT a.client_id
		,a.client_id_string
		,a.platform_person_internal_id
		,a.hourly_salary_status
		,a.fulltime_parttime_status
		,a.person_reason_code
		,a.union_name
		,a.gender
		,a.employment_status
		,a.standard_employment_status_code
		,a.prtc_stat_cd
		,a.plfm_ind_cd
		,a.plan_id
		,a.plan_brnd_cd
		,a.plan_ldsc_tx
		,a.plan_type_cd
		,a.age
		,a.row_level_security_filter_value
		,a.custom_filter_1
		,a.custom_filter_2
		,a.custom_filter_3
		,a.custom_filter_4
		,a.custom_filter_5
		,B.standard_display_name
		,B.standard_display_name AS AGE_RANGE
		,a.TENURE
		,C.standard_display_name AS TENURE_RANGE
		,a.salary
		,D.standard_display_name AS SALARY_RANGE
	FROM person_data a
	 LEFT JOIN (
                                SELECT *
                                FROM range_lookup
                                WHERE standard_group_key = 'AGE_RANGE_DC'
                                ) b ON floor(a.age)BETWEEN (b.standard_min)
                                                AND(b.standard_max)
                LEFT JOIN (
                                SELECT *
                                FROM range_lookup
                                WHERE standard_group_key = 'TENURE'
                                ) C ON floor(a.tenure) BETWEEN (C.standard_min)
                                                AND (C.standard_max)
                LEFT JOIN (
                                SELECT *
                                FROM range_lookup
                                WHERE standard_group_key = 'SALARY_RANGE_WEALTH'
                                ) D ON floor (a.salary) BETWEEN (D.standard_min)
                                                AND (D.standard_max)
	)
	,dc_fund_balances
AS (
	SELECT fb.client_id
		,platform_person_internal_id
		,fb.plan_id
		,fb.fund_id
		,effective_date
		,closing_balance_amount
		,rollover_contribution_amount
	FROM wealth_rpt.dc_account_balances fb
	INNER JOIN wealth_rpt.hardbalance_dim hdm ON fb.client_id = hdm.client_id
		AND fb.plan_id = hdm.plan_id
		AND fb.fund_id = hdm.fund_id
		--AND closing_balance_amount >0				
	WHERE hdm.plan_type_code = 'DC'
		AND fb.client_id IN (<<$pClientId>>)
		AND effective_date = last_day(<<$pAsOfDate>>)
	)
	,plan_balance
AS (
	SELECT j.client_id
		,j.platform_person_internal_id
		,j.plan_id
		,j.fund_id
		,closing_balance_amount AS planbalance
	FROM dc_fund_balances j
	)
	,aggr_plan_balance
AS (
	SELECT client_id
		,platform_person_internal_id
		,plan_id
		,sum(planbalance) AS plan_balance
	FROM plan_balance
	GROUP BY client_id
		,plan_id
		,platform_person_internal_id
	)
	,join_person_balance
AS (
	SELECT DISTINCT p.client_id
		,p.client_id_string
		,p.platform_person_internal_id
		,p.salary
		,p.SALARY_RANGE
		,p.hourly_salary_status
		,p.prtc_stat_cd
		,employment_status
		,standard_employment_status_code
		,p.fulltime_parttime_status
		,p.union_name
		,p.gender
		,p.age
		,p.AGE_RANGE
		,p.tenure
		,p.TENURE_RANGE
		,p.plan_id
		,p.plan_ldsc_tx
		,pb.plan_balance
		,p.plan_type_cd
		,p.row_level_security_filter_value
		,p.custom_filter_1
		,p.custom_filter_2
		,p.custom_filter_3
		,p.custom_filter_4
		,p.custom_filter_5
		,last_day(<<$pAsOfDate>>) as reporting_month
	FROM dc_person_attributes p 
	LEFT JOIN aggr_plan_balance pb ON pb.client_id = p.client_id
		AND pb.plan_id = p.plan_id
		AND pb.platform_person_internal_id = p.platform_person_internal_id
	)
	,dc_contributions
AS (
	SELECT 
		client_id,
		plan_id,
		platform_person_internal_id,
		contribution_rate_id,
		contribution_rate_type_code,
		actual_contribution_rate as actual_contribution_rate,
		actual_contribution_amount AS actual_contribution_amount
	FROM wealth_itg.dc_contributions
	WHERE trim(contribution_rate_type_code) in ('RT','BT','AT')
		AND begin_date <= <<$pAsOfDate>>
		AND end_date >= <<$pAsOfDate>>
	)
	,dc_ccp_ctrb_id 
AS (
	SELECT c.client_id
		,c.base_provision_type_id
		,CAST(c.provision_key_value AS INT) AS provision_key_value
		,ci.base_element_id
		,ROW_NUMBER() OVER (PARTITION BY c.client_id) AS rn
	FROM adlfound_itg.ccr_instance c
	INNER JOIN adlfound_itg.ccr_instance_element ci ON c.client_id = ci.client_id
		AND c.data_instance_id = ci.data_instance_id
	WHERE c.client_id = <<$pClientId>> --and c.base_provision_type_id=9000080
		AND ci.base_element_id IN (106580,106570,106560)
		AND trim(c.platform_indicator_code) IN ('R3','R4','DCE')
	)
	,dc_ccp_ctrb_id_uniq_client
AS (
	SELECT client_id
	FROM dc_ccp_ctrb_id
	WHERE rn = 1
	)
	,
	--Use contribution id available in ccp table. If ccp data doesn't exist, use contributions directly from contribution table.
	dc_contributions_ccp 
AS (
	(
	SELECT c.*
	FROM dc_contributions c
	INNER JOIN dc_ccp_ctrb_id d_ccp ON c.client_id = d_ccp.client_id
			AND c.contribution_rate_id = d_ccp.provision_key_value
	)
	UNION ALL
	(
	SELECT c.*
	FROM dc_contributions c
	WHERE NOT EXISTS (
				SELECT 1
				FROM dc_ccp_ctrb_id_uniq_client i
				WHERE i.client_id = c.client_id
				)
		)
	)
	,dc_contributions_final
AS (
	SELECT 
		client_id,
		plan_id,
		platform_person_internal_id,
		--contribution_rate_id,
		--contribution_rate_type_code,
		SUM(actual_contribution_rate) as actual_contribution_rate,
		SUM(actual_contribution_amount) AS actual_contribution_amount
	FROM dc_contributions_ccp
	WHERE trim(contribution_rate_type_code) in ('RT','BT','AT')
	GROUP BY 
		client_id,
		plan_id,
		platform_person_internal_id
	)
	,join_person_contributions
AS (
	SELECT 
		p.client_id
		,p.client_id_string
		,p.platform_person_internal_id
		,p.SALARY_RANGE
		,p.hourly_salary_status
		,p.prtc_stat_cd
		,P.employment_status
		,p.standard_employment_status_code
		,p.fulltime_parttime_status
		,p.union_name
		,p.gender
		,p.AGE_RANGE
		,p.TENURE_RANGE
		,p.plan_id
		,p.plan_ldsc_tx
		,p.row_level_security_filter_value
		,p.custom_filter_1
		,p.custom_filter_2
		,p.custom_filter_3
		,p.custom_filter_4
		,p.custom_filter_5
		,p.reporting_month
		,p.plan_balance
		,c.actual_contribution_rate
		,c.actual_contribution_amount
		,case when upper(trim(p.prtc_stat_cd))='ELIG' and (nvl(actual_contribution_rate,0) > 0 or nvl(actual_contribution_amount,0) >0) then 'Eligible - Contributing'
		when upper(trim(prtc_stat_cd))='ELIG' and (nvl(actual_contribution_rate,0) <= 0 and nvl(actual_contribution_amount,0) <= 0) and nvl(plan_balance,0) <= 0 then 'Eligible - Not Contributing'
		when upper(trim(prtc_stat_cd))='ACTIVE' and (nvl(actual_contribution_rate,0) > 0 or nvl(actual_contribution_amount,0) >0) then 'Active - Contributing'
		when upper(trim(prtc_stat_cd))='ACTIVE' and (nvl(actual_contribution_rate,0) <= 0 and nvl(actual_contribution_amount,0) <= 0) then 'Active - Not Contributing'
		when upper(trim(prtc_stat_cd))='ELIG' and (nvl(actual_contribution_rate,0) <=0 and nvl(actual_contribution_amount,0) <= 0) and nvl(plan_balance,0) > 0  then 'Eligible - Not Contributing w/ Balance' 
		when upper(trim(standard_employment_status_code)) IN ('LOFF','RTEE','SVRN_PAY','TERM','DCSD_OUT_OF_SV','DCSD_INSV_BC_CALL','DCSD_INSV_HR_FEED') and nvl(plan_balance,0) >0 then 'Terminated with Balance'
		else 'Others'
		end AS participation_status
	FROM 
		join_person_balance p 
		LEFT OUTER JOIN dc_contributions_final c 
		ON p.client_id = c.client_id
		AND p.plan_id = c.plan_id
		AND p.platform_person_internal_id = c.platform_person_internal_id		
	)
SELECT 
	client_id
	,client_id_string
	,plan_id
	,plan_ldsc_tx AS plan_name
	,row_level_security_filter_value
	,custom_filter_1
	,custom_filter_2
	,custom_filter_3
	,custom_filter_4
	,custom_filter_5
	,SALARY_RANGE
	,AGE_RANGE
	,TENURE_RANGE
	,gender
	,reporting_month
	,COUNT(DISTINCT CASE WHEN ((upper(trim(employment_status))='ACTIVE' AND upper(trim(prtc_stat_cd)) in ('ACTIVE','ELIG'))) THEN platform_person_internal_id END) AS total_ppt
	,COUNT(DISTINCT CASE WHEN prtc_stat_cd IN ('ACTIVE','ELIG') AND (actual_contribution_rate > 0 OR actual_contribution_amount>0) THEN platform_person_internal_id END) AS participation_rate_num
	,COUNT(DISTINCT CASE WHEN prtc_stat_cd IN ('ACTIVE','ELIG') AND UPPER(employment_status) = 'ACTIVE' THEN platform_person_internal_id END) AS participation_rate_dnm
	,CAST(COUNT(DISTINCT CASE WHEN prtc_stat_cd IN ('ACTIVE','ELIG') AND (actual_contribution_rate > 0 OR actual_contribution_amount>0) THEN platform_person_internal_id END) AS DOUBLE PRECISION)/ NULLIF(COUNT(DISTINCT CASE WHEN prtc_stat_cd IN ('ACTIVE','ELIG') AND UPPER(employment_status) = 'ACTIVE' THEN platform_person_internal_id END),0) AS participation_rate
	,COUNT(DISTINCT CASE WHEN trim(participation_status) in ('Eligible - Contributing','Active - Contributing') AND upper(trim(employment_status))='ACTIVE' THEN platform_person_internal_id END) AS Eligible_Contributing
	,COUNT(DISTINCT CASE WHEN trim(participation_status) in ('Eligible - Not Contributing','Active - Not Contributing') AND upper(trim(employment_status))='ACTIVE' THEN platform_person_internal_id END) AS Eligible_Not_Contributing
	,COUNT(DISTINCT CASE WHEN trim(participation_status) = 'Terminated with Balance' THEN platform_person_internal_id END) AS Terminated_with_balance
	,COUNT(DISTINCT CASE WHEN trim(participation_status) = 'Eligible - Not Contributing w/ Balance' AND upper(trim(employment_status))='ACTIVE' THEN platform_person_internal_id END) AS Eligible_Not_Contributing_w_Balance
FROM join_person_contributions
	GROUP BY
		client_id
		,client_id_string
		,plan_id
		,plan_ldsc_tx
		,reporting_month
		,row_level_security_filter_value
		,custom_filter_1
		,custom_filter_2
		,custom_filter_3
		,custom_filter_4
		,custom_filter_5
		,SALARY_RANGE
		,AGE_RANGE
		,TENURE_RANGE
		,gender
	HAVING COUNT(DISTINCT CASE WHEN ((upper(trim(employment_status))='ACTIVE' AND upper(trim(prtc_stat_cd)) in ('ACTIVE','ELIG'))) THEN platform_person_internal_id END)> 0