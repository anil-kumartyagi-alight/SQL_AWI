WITH 
mv_person AS 
    (
    SELECT
	DISTINCT global_client_id
                                ,global_person_id
                                ,client_id, client_id_string
                                ,platform_person_internal_id
								,platform_id
                                ,CASE 
WHEN birth_date IN (
'1800-01-01'
,'1900-01-01'
,'1901-01-01'
,'1910-01-01'
,'1930-01-01'
,'0001-12-30 BC'
) THEN NULL
ELSE birth_date end as birth_date,
person_reason_code as Person_Type,
row_level_security_filter_value as row_level_security_filter_value
                                

                FROM person_rpt.person PRSN_DIMN7
                WHERE
-- person_type person_reason_code
person_reason_code in( 'Employee','QDRO','Beneficiary' )AND 
								begin_date <= last_day(ADD_MONTHS(CURRENT_DATE,-1))
                                AND end_date >= last_day(ADD_MONTHS(CURRENT_DATE,-1))
                                 AND client_id = cast(<<$pClientId>>  as int)
    )
--select * from mv_person
, 

mv_person_employment
AS (
                SELECT DISTINCT 
                                client_id
                                ,platform_person_internal_id
								,platform_id
                                ,employment_status
								,standard_value as roll_up_1
                FROM person_rpt.person_employment e 
				left join (select distinct standard_key,standard_value from adlfound_itg.standard_rollups_lookup where 
standard_group_key in ('EMPL-STAT-CD-ROLLUP1') ) s
on trim(standard_employment_status_code)=(standard_key)
                WHERE 
				--upper(trim(employment_status)) in  ('ACTIVE','INACTIVE')AND 
				begin_date <= last_day(ADD_MONTHS(CURRENT_DATE,-1))
                                AND end_date >= last_day(ADD_MONTHS(CURRENT_DATE,-1))
                                AND client_id = cast(<<$pClientId>>  as int)
	
                )
,
db_plan_dim as (
select distinct client_id,plan_id,plan_ldsc_tx
from wealth_rpt.db_plan_dim 
where client_id = cast(<<$pClientId>>  as int)
)
-- select * from mv_person_employment 

                ,db_person_attributes
AS (
                SELECT 
                                p.client_id, p.client_id_string
                                ,p.platform_person_internal_id
                                ,e.employment_status
								,p.platform_id

								,p.birth_date
								,e.roll_up_1
								,p.Person_Type
								,p.row_level_security_filter_value
                FROM mv_person p
                inner JOIN mv_person_employment e ON p.client_id = e.client_id
                                AND p.platform_person_internal_id = e.platform_person_internal_id
								AND p.platform_id = e.platform_id
                                 AND p.client_id = cast(<<$pClientId>>  as int))
--select * from db_person_attributes
,

PRSN_PLANSTAT_DIMN01
AS (
 SELECT a.client_id AS CLIENT_ID
 ,a.platform_id
  ,a.platform_person_internal_id AS PRSN_INTN_ID
  ,plan_status_description 
  ,a.plan_id AS PLAN_ID
  ,c.plan_ldsc_tx as Plan_Description
 FROM wealth_rpt.person_planstatus_dim a
 INNER JOIN wealth_rpt.dc_category_dim b ON a.client_id = b.client_id
  AND a.category_id = b.category_id
  AND a.plan_id = b.plan_id
 INNER JOIN wealth_rpt.db_plan_dim c on  a.client_id = c.client_id
  AND a.plan_id = c.plan_id
 WHERE
  a.platform_indicator_code IN ('R3','R4','DBE') 
  AND b.category_type_code = 'PS'
  and a.plan_status_code='UNAV'
  AND last_day(ADD_MONTHS(CURRENT_DATE,-1)) >= a.begin_date
  AND last_day(ADD_MONTHS(CURRENT_DATE,-1)) <= a.end_date
  AND b.category_definition_brand_code = 'DB-AVLB'
  AND a.client_id = cast(<<$pClientId>>  as int)
 ),
Shortcut_to_Pension_Popu_Elig_Current_All AS 
    (
    SELECT distinct
	DB_ELIG_A_FACT11.client_id,
	DB_ELIG_A_FACT11.platform_id,
        DB_ELIG_A_FACT11.platform_person_internal_id AS PRSN_INTN_ID, 
        DB_ELIG_A_FACT11.plan_id AS PLAN_ID, 
        DB_ELIG_A_FACT11.earliest_commencement_date_for_ccp AS earl_cmnc_dt_ccp, 
        DB_ELIG_A_FACT11.normal_retirement_date AS normal_retire_dt,
case when is_deferred_vested then 'Y' else 'N' end as is_deferred_vested		

		
    FROM
        wealth_rpt.db_person_plan DB_ELIG_A_FACT11 
    WHERE 
	   DB_ELIG_A_FACT11.client_id = cast(<<$pClientId>>  as int)
    )
	-- select * from Shortcut_to_Pension_Popu_Elig_Current_All
	,
	Pension_Participant_Data as (
SELECT
Person.client_id_string,
    Person.platform_person_internal_id AS Internal_ID, 
    Person.employment_status AS Employment_Status,
	Person.birth_date AS birth_date,
	Person.Person_Type,
	Person.row_level_security_filter_value,
	    Shortcut_to_Pension_Popu_Elig_Current_All.normal_retire_dt AS normal_retire_dt, 
    Shortcut_to_Pension_Popu_Elig_Current_All.earl_cmnc_dt_ccp AS earl_cmnc_dt_ccp,
is_deferred_vested,
roll_up_1,
Shortcut_to_Pension_Popu_Elig_Current_All.PLAN_ID
FROM
	db_person_attributes Person
                LEFT OUTER JOIN Shortcut_to_Pension_Popu_Elig_Current_All
                ON 
                    Person.platform_person_internal_id = Shortcut_to_Pension_Popu_Elig_Current_All.PRSN_INTN_ID AND
                    Person.client_id = Shortcut_to_Pension_Popu_Elig_Current_All.client_id
					and Person.platform_id = Shortcut_to_Pension_Popu_Elig_Current_All.platform_id
					inner JOIN
					db_plan_dim DB_Plan_Dimension
					on 
					Shortcut_to_Pension_Popu_Elig_Current_All.client_id=DB_Plan_Dimension.client_id
					and Shortcut_to_Pension_Popu_Elig_Current_All.PLAN_ID=DB_Plan_Dimension.plan_id
					left outer join PRSN_PLANSTAT_DIMN01 
					on PRSN_PLANSTAT_DIMN01.PLAN_ID=Shortcut_to_Pension_Popu_Elig_Current_All.PLAN_ID
					and PRSN_PLANSTAT_DIMN01.PRSN_INTN_ID=Shortcut_to_Pension_Popu_Elig_Current_All.PRSN_INTN_ID
					and PRSN_PLANSTAT_DIMN01.platform_id=Shortcut_to_Pension_Popu_Elig_Current_All.platform_id

where PRSN_PLANSTAT_DIMN01.PRSN_INTN_ID is null)
--select * from Pension_Participant_Data
,
Qry_Pension_Participant_Data_70_5 AS 
    (
    SELECT
	client_id_string,
	PLAN_ID,
        DB_Participant_Data.Internal_ID AS Person_Internal_ID, 
        cast ('Approaching 70.5' as varchar) AS Key_Date_Type, 
        cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) AS Key_Date, 
        CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Inactive, 
        CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Active,
		DB_Participant_Data.Employment_Status,
		roll_up_1,row_level_security_filter_value


    FROM
        Pension_Participant_Data DB_Participant_Data
    WHERE 
Person_Type in( 'Employee','QDRO','Beneficiary' ) AND
       ( CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N' OR
        CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N')
		
   GROUP BY 
   client_id_string,
   PLAN_ID,
   DB_Participant_Data.Internal_ID , 
       -- 'Approaching 70.5', 
        cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date), 
        CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END , 
        CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END,
		DB_Participant_Data.Employment_Status,
		roll_up_1,row_level_security_filter_value
     
    )
--select * from Qry_Pension_Participant_Data_70_5
	,
Qry_Pension_Participant_Data_ECD AS 
    (
    SELECT
	client_id_string,
	PLAN_ID,
        DB_Participant_Data.Internal_ID AS Person_Internal_ID,  
        cast('Earliest Commencement Date' as varchar) AS Key_Date_Type, 
        cast(earl_cmnc_dt_ccp as date) AS Key_Date, 
        CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Inactive, 
        CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Active,
		DB_Participant_Data.Employment_Status,
		roll_up_1,row_level_security_filter_value


    FROM
        Pension_Participant_Data DB_Participant_Data
    WHERE 
Person_Type in( 'Employee','QDRO','Beneficiary' ) AND
       ( CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N' OR
        CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N')
		
   GROUP BY 
   client_id_string,
   PLAN_ID,
   DB_Participant_Data.Internal_ID , 
 
        cast(earl_cmnc_dt_ccp as date), 
        CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END , 
        CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END,
		DB_Participant_Data.Employment_Status,
		roll_up_1,row_level_security_filter_value
     
    )
--select * from Qry_Pension_Participant_Data_ECD
,
Qry_Pension_Participant_Data_NRD AS 
    (
    SELECT
	client_id_string,
	PLAN_ID,
        DB_Participant_Data.Internal_ID AS Person_Internal_ID,
        cast ('Approaching NRD' as varchar) AS Key_Date_Type, 
        cast(normal_retire_dt as date) AS Key_Date, 
        CASE 
            WHEN 
                cast(normal_retire_dt as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Inactive, 
        CASE 
            WHEN 
                cast(normal_retire_dt as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Active,
DB_Participant_Data.Employment_Status,
roll_up_1,row_level_security_filter_value


    FROM
        Pension_Participant_Data DB_Participant_Data
    WHERE 
Person_Type in( 'Employee','QDRO','Beneficiary' ) AND
       ( CASE 
            WHEN 
                cast(normal_retire_dt as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N' OR
        CASE 
            WHEN 
                cast(normal_retire_dt as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N')
		
   GROUP BY 
   client_id_string,
   PLAN_ID,
   DB_Participant_Data.Internal_ID , 
    --    'Approaching 70.5', 
        cast(normal_retire_dt as date), 
        CASE 
            WHEN 
                cast(normal_retire_dt as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END , 
        CASE 
            WHEN 
                cast(normal_retire_dt as date) > last_day(ADD_MONTHS(CURRENT_DATE,-1)) AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, last_day(ADD_MONTHS(CURRENT_DATE,-1)))) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END,
		DB_Participant_Data.Employment_Status,
		roll_up_1,row_level_security_filter_value
     
    )
--select * from Qry_Pension_Participant_Data_NRD
-- select cast (client_id_string as varchar), cast(row_level_security_filter_value as varchar), cast(key_date_type as varchar) as Dimension_Value1,'3 Months - Active' as Dimension_Value2,count(1)  from Qry_Pension_Participant_Data_70_5 where cast(c3_months_active as varchar)='Y'
-- group by cast (client_id_string as varchar),cast(row_level_security_filter_value as varchar),cast(key_date_type as varchar)

select cast (client_id_string as varchar), cast(row_level_security_filter_value as varchar), cast(key_date_type as varchar) as Dimension_Value1,'3 Months - Active' as Dimension_Value2,count(person_internal_id) as Count0  from Qry_Pension_Participant_Data_70_5 where c3_months_active='Y'
group by cast (client_id_string as varchar),cast(row_level_security_filter_value as varchar),cast(key_date_type as varchar)
union all 
select cast (client_id_string as varchar), cast(row_level_security_filter_value as varchar), cast(key_date_type as varchar) as Dimension_Value1,'3 Months - Not Active' as Dimension_Value2,count(person_internal_id) as Count0  from Qry_Pension_Participant_Data_70_5 where c3_months_inactive='Y'
group by cast (client_id_string as varchar),cast(row_level_security_filter_value as varchar),cast(key_date_type as varchar)


union all 
select cast (client_id_string as varchar), cast(row_level_security_filter_value as varchar), cast(key_date_type as varchar) as Dimension_Value1,'3 Months - Active' as Dimension_Value2,count(person_internal_id) as Count0    from Qry_Pension_Participant_Data_ECD where c3_months_active='Y'
group by cast (client_id_string as varchar),cast(row_level_security_filter_value as varchar),cast(key_date_type as varchar)
union all 
select cast (client_id_string as varchar), cast(row_level_security_filter_value as varchar), cast(key_date_type as varchar) as Dimension_Value1,'3 Months - Not Active' as Dimension_Value2,count(person_internal_id) as Count0    from Qry_Pension_Participant_Data_ECD where c3_months_inactive='Y'
group by cast (client_id_string as varchar),cast(row_level_security_filter_value as varchar),cast(key_date_type as varchar)


union ALL
select cast (client_id_string as varchar), cast(row_level_security_filter_value as varchar), cast(key_date_type as varchar) as Dimension_Value1, '3 Months - Active' as Dimension_Value2,count(person_internal_id) as Count0   from Qry_Pension_Participant_Data_NRD where c3_months_active='Y'
group by cast (client_id_string as varchar),cast(row_level_security_filter_value as varchar),cast(key_date_type as varchar)
union ALL
select cast (client_id_string as varchar), cast(row_level_security_filter_value as varchar), cast(key_date_type as varchar) as Dimension_Value1, '3 Months - Not Active'  as Dimension_Value2,count(person_internal_id) as Count0   from Qry_Pension_Participant_Data_NRD where c3_months_inactive='Y'
group by cast (client_id_string as varchar),cast(row_level_security_filter_value as varchar),cast(key_date_type as varchar)