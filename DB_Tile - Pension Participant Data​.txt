WITH 
mv_person AS ( SELECT DISTINCT client_id, client_id_string, platform_id,platform_person_internal_id,person_reason_code,begin_date,end_date, row_level_security_filter_value as row_level_security_filter_value
FROM person_rpt.person PRSN_DIMN7
WHERE begin_date <= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day'
AND end_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day' AND client_id = cast(<<$pClientId>> as int)
),

mv_person_employment as (SELECT DISTINCT client_id,platform_person_internal_id, platform_id,employment_status,standard_value as roll_up_1
 FROM person_rpt.person_employment e 
left join (select distinct standard_key,standard_value from adlfound_itg.standard_rollups_lookup where 
standard_group_key in ('EMPL-STAT-CD-ROLLUP1') ) s
on trim(standard_employment_status_code)=(standard_key)
WHERE  begin_date <= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day'
 AND end_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day' AND client_id = cast(<<$pClientId>> as int)
),

db_person_attributes AS (SELECT p.client_id, p.client_id_string, p.platform_id,p.platform_person_internal_id,e.roll_up_1 as employment_status,p.person_reason_code,p.row_level_security_filter_value,p.begin_date,p.end_date
FROM mv_person p inner JOIN mv_person_employment e ON p.client_id = e.client_id
 AND p.platform_person_internal_id = e.platform_person_internal_id 
 AND p.platform_id = e.platform_id
WHERE p.client_id = cast(<<$pClientId>> as int)
),

db_plan_dim as ( select distinct client_id,plan_id,plan_ldsc_tx from wealth_rpt.db_plan_dim where client_id=<<$pClientId>>
),

PRSN_PLANSTAT_DIMN01 AS ( SELECT a.client_id,a.platform_id, a.platform_person_internal_id AS PRSN_INTN_ID, plan_status_description, a.plan_id
  ,c.plan_ldsc_tx as Plan_Description 
 FROM wealth_rpt.person_planstatus_dim a  INNER JOIN wealth_rpt.dc_category_dim b ON a.client_id = b.client_id
  AND a.category_id = b.category_id AND a.plan_id = b.plan_id  INNER JOIN wealth_rpt.db_plan_dim c on  a.client_id = c.client_id AND a.plan_id = c.plan_id WHERE a.platform_indicator_code IN ('R3','R4','DBE') AND b.category_type_code = 'PS'
  and a.plan_status_code='UNAV' AND DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day' >= a.begin_date AND DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day' <= a.end_date
  AND b.category_definition_brand_code = 'DB-AVLB' AND a.client_id =<<$pClientId>>
 ),
 
Exp_Calen_yza as ( SELECT DISTINCT last_day(calendar_date)::date AS cal_dt, calendar_year,
    dateadd(day, 1, last_day(dateadd(month, -1, calendar_date))) AS first_dt
FROM adlfound_itg.calendar Calen_yza
WHERE calendar_year = (date_part(year, current_date) - 2) OR calendar_year = (date_part(year, current_date) - 1)
   OR (calendar_year = date_part(year, current_date) AND date_part(month, current_date) >= date_part(month, calendar_date))
), 

Shortcut_to_Pension_Popu_Elig_Current_All AS ( SELECT distinct DB_ELIG_A_FACT11.client_id,platform_id, DB_ELIG_A_FACT11.platform_person_internal_id AS PRSN_INTN_ID, DB_ELIG_A_FACT11.plan_id AS PLAN_ID, DB_ELIG_A_FACT11.earliest_commencement_date_for_ccp AS earl_cmnc_dt_ccp, DB_ELIG_A_FACT11.normal_retirement_date AS normal_retire_dt,
case when is_deferred_vested then 'Y' else 'N' end as is_deferred_vested,
max(fully_vested_date) over (partition by platform_id,client_id,platform_person_internal_id,
  plan_id,platform_indicator_code) AS fully_vested_date,begin_date,end_date		
FROM  wealth_rpt.db_person_plan DB_ELIG_A_FACT11 WHERE DB_ELIG_A_FACT11.client_id=<<$pClientId>>
),

query_db_payments As (select distinct client_id,platform_id,  platform_person_internal_id  ,payment_effective_date,
payment_adjustment_cd,payment_type,plan_id,plan,
payment_id,payment_destination,sum(total_payment_amount) as total_payment_amount,address_format_type_code
from wealth_rpt.db_payments  where 
client_id= cast(<<$pClientId>> as int)  
--and extract(year from payment_effective_date) >= date_part(year, current_date) - 2  and payment_effective_date <= current_date
and payment_instruction_status_code ='A' 
and convert_timezone('CST', payment_effective_date) >= '1800-01-01'
AND (
    date_part(year, convert_timezone('CST', payment_effective_date)) = date_part(year, current_date) - 2
    OR date_part(year, convert_timezone('CST', payment_effective_date)) = date_part(year, current_date) - 1
    OR (
        date_part(year, convert_timezone('CST', payment_effective_date)) = date_part(year, current_date)
        AND date_part(month, convert_timezone('CST', payment_effective_date)) <= date_part(month, current_date)
    )
)
group by platform_person_internal_id  ,payment_effective_date,address_format_type_code,
payment_id,payment_destination,payment_adjustment_cd,client_id,platform_id,payment_type,plan_id,plan
),

payment_attribute_join as (SELECT person_attributes.client_id, person_attributes.client_id_string, person_attributes.row_level_security_filter_value,
query_db_payments.platform_person_internal_id, query_db_payments.payment_id,query_db_payments.plan_id,extract(year from query_db_payments.payment_effective_date) as payment_year,last_day(query_db_payments.payment_effective_date) as reporting_month_dt, query_db_payments.plan as plan_desc,person_attributes.person_reason_code
from query_db_payments inner join db_person_attributes person_attributes  on
   query_db_payments.client_id = person_attributes.client_id
  AND query_db_payments.platform_person_internal_id = person_attributes.platform_person_internal_id
  AND query_db_payments.platform_id = person_attributes.platform_id
  
),  

Pension_Participant_Data as (SELECT Person.platform_person_internal_id AS person_internal_id, Person.employment_status,
	Person.person_reason_code, Person.client_id_string, Person.row_level_security_filter_value, fully_vested_date, cal.cal_dt,
Shortcut_to_Pension_Popu_Elig_Current_All.plan_id, DB_Plan_Dimension.plan_ldsc_tx as plan_desc, Shortcut_to_Pension_Popu_Elig_Current_All.client_id,Shortcut_to_Pension_Popu_Elig_Current_All.is_deferred_vested,Shortcut_to_Pension_Popu_Elig_Current_All.begin_date
FROM db_person_attributes Person LEFT OUTER JOIN Shortcut_to_Pension_Popu_Elig_Current_All
  ON Person.platform_person_internal_id = Shortcut_to_Pension_Popu_Elig_Current_All.PRSN_INTN_ID AND
Person.client_id = Shortcut_to_Pension_Popu_Elig_Current_All.client_id
and Person.platform_id = Shortcut_to_Pension_Popu_Elig_Current_All.platform_id
left JOIN db_plan_dim DB_Plan_Dimension on  Shortcut_to_Pension_Popu_Elig_Current_All.client_id=DB_Plan_Dimension.client_id
and Shortcut_to_Pension_Popu_Elig_Current_All.PLAN_ID=DB_Plan_Dimension.plan_id
left outer join PRSN_PLANSTAT_DIMN01 on PRSN_PLANSTAT_DIMN01.PLAN_ID=Shortcut_to_Pension_Popu_Elig_Current_All.PLAN_ID
and PRSN_PLANSTAT_DIMN01.PRSN_INTN_ID=Shortcut_to_Pension_Popu_Elig_Current_All.PRSN_INTN_ID
and PRSN_PLANSTAT_DIMN01.platform_id=Shortcut_to_Pension_Popu_Elig_Current_All.platform_id
inner join Exp_Calen_yza cal on cal.cal_dt between Person.begin_date and Person.end_date
where PRSN_PLANSTAT_DIMN01.PRSN_INTN_ID is null ),

Exp_db_ppt_1_elig_smry_yza as (SELECT client_id, client_id_string, plan_id,plan_desc,
person_internal_id, row_level_security_filter_value, fully_vested_date,last_day(fully_vested_date) AS reporting_month_dt, extract(year from fully_vested_date) as reporting_year, employment_status AS empl_stat, person_reason_code AS prsn_rsn_cd, cal_dt as rpt_fltr_1_desc,
cast('Participant_Data' as VARCHAR) AS smry_dimn_type, cast('Vested_NonVested' as VARCHAR) AS smry_dimn_value
FROM Pension_Participant_Data WHERE upper(employment_status) ='ACTIVE' and fully_vested_date >= '1900-01-01'
),

Exp_db_ppt_2_elig_smry_yza as (SELECT client_id, client_id_string,
plan_id, plan_desc, person_internal_id, row_level_security_filter_value, last_day(cal_dt) AS reporting_month_dt, employment_status AS empl_stat, 
person_reason_code AS prsn_rsn_cd,
cast('Participant_Data' as VARCHAR) AS smry_dimn_type,
cast('Deferred_Vested' as VARCHAR) AS smry_dimn_value
FROM Pension_Participant_Data
WHERE is_deferred_vested ='Y' and begin_date >= '1800-01-01'
),

Exp_db_ppt_3_elig_smry_yza as (SELECT client_id, client_id_string,row_level_security_filter_value, platform_person_internal_id,
payment_id,plan_id,payment_year,reporting_month_dt,plan_desc, person_reason_code AS prsn_rsn_cd,
cast('Participant_Data' as VARCHAR) AS smry_dimn_type,
cast('In_Payment' as VARCHAR) AS smry_dimn_value
FROM payment_attribute_join
),

Qry_Participant_Data_Count_1 AS (select plan_desc AS Plan, count(distinct person_internal_id+plan_id) as Count0,reporting_month_dt AS Reporting_Month, 'Active - Vested' AS Category,
    DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day' AS To_Date,
    DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month') AS From_Date,
    plan_id AS Plan_ID, client_id_string, row_level_security_filter_value
FROM Exp_db_ppt_1_elig_smry_yza
WHERE reporting_month_dt <= (DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day')::date AND
    smry_dimn_value = 'Vested_NonVested' 
    AND smry_dimn_type = 'Participant_Data'
	AND prsn_rsn_cd <> 'N'
GROUP BY plan_desc, 
       reporting_month_dt, 
         plan_id, client_id_string, row_level_security_filter_value
),

Qry_Participant_Data_Count_2 AS (SELECT plan_desc AS Plan, count(distinct person_internal_id+plan_id) as Count0,reporting_month_dt AS Reporting_Month,
'Active - Not Vested' AS Category, 
    DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day' AS To_Date,
    DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month') AS From_Date, 
    plan_id AS Plan_ID, client_id_string, row_level_security_filter_value
FROM Exp_db_ppt_1_elig_smry_yza
WHERE reporting_month_dt > (DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day')::date AND 
smry_dimn_value = 'Vested_NonVested' AND
smry_dimn_type = 'Participant_Data' AND
prsn_rsn_cd <> 'N' 
GROUP BY 
    plan_desc, 
    reporting_month_dt, 
    plan_id, client_id_string, row_level_security_filter_value
),

Qry_Participant_Data_Count_3 AS (SELECT plan_desc AS Plan, COUNT(DISTINCT(CONCAT(CONCAT(platform_person_internal_id,plan_id),payment_year)) ) as Count0,
reporting_month_dt AS Reporting_Month,
'In Payment' AS Category, 
    DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day' AS To_Date, 
    DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month') AS From_Date, 
    plan_id AS Plan_ID, client_id_string, row_level_security_filter_value
FROM Exp_db_ppt_3_elig_smry_yza
WHERE reporting_month_dt = (DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day')::date
 AND 
smry_dimn_value = 'In_Payment' AND smry_dimn_type = 'Participant_Data' AND prsn_rsn_cd <> 'N' 
GROUP BY 
    plan_desc, 
    reporting_month_dt, 
    plan_id, client_id_string, row_level_security_filter_value
),

Qry_Participant_Data_Count_4 AS (SELECT plan_desc AS Plan, count(distinct person_internal_id+plan_id) as Count0,reporting_month_dt AS Reporting_Month,'Deferred Vested' AS Category, 
    DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day' AS To_Date, 
    DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month') AS From_Date, 
    plan_id AS Plan_ID, client_id_string, row_level_security_filter_value
FROM Exp_db_ppt_2_elig_smry_yza
WHERE reporting_month_dt = (DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day')::date AND smry_dimn_value = 'Deferred_Vested' AND
                                       smry_dimn_type = 'Participant_Data' AND
                                       prsn_rsn_cd <> 'N' AND 'Deferred Vested' <> '' 
GROUP BY 
    plan_desc, 
    reporting_month_dt, 
    plan_id, client_id_string, row_level_security_filter_value
),

Query1 AS 
    (
    SELECT
        Union1.Plan AS Plan, 
        Union1.Count0 AS Count0, 
        Union1.Reporting_Month AS Reporting_Month, 
        Union1.Category AS Category, 
        Union1.To_Date AS To_Date, 
        Union1.From_Date AS From_Date, 
        Union1.Plan_ID AS Plan_ID,
		Union1.client_id_string,
		Union1.row_level_security_filter_value
    FROM
        (
        SELECT
            *
        FROM
            Qry_Participant_Data_Count_1
        
        UNION
        
        SELECT
            *
        FROM
            Qry_Participant_Data_Count_2
        ) Union1(Plan, Count0, Reporting_Month, Category, To_Date, From_Date, Plan_ID, client_id_string, row_level_security_filter_value) 
    GROUP BY 
        Union1.Plan, 
        Union1.Count0, 
        Union1.Reporting_Month, 
        Union1.Category, 
        Union1.To_Date, 
        Union1.From_Date, 
        Union1.Plan_ID,
		Union1.client_id_string,
		Union1.row_level_security_filter_value
    ), 
Query2 AS 
    (
    SELECT
        Union2.Plan AS Plan, 
        Union2.Count0 AS Count0, 
        Union2.Reporting_Month AS Reporting_Month, 
        Union2.Category AS Category, 
        Union2.To_Date AS To_Date, 
        Union2.From_Date AS From_Date, 
        Union2.Plan_ID AS Plan_ID,
		Union2.client_id_string,
		Union2.row_level_security_filter_value
    FROM
        (
        SELECT
            *
        FROM
            Qry_Participant_Data_Count_3
        
        UNION
        
        SELECT
            *
        FROM
            Qry_Participant_Data_Count_4
        ) Union2(Plan, Count0, Reporting_Month, Category, To_Date, From_Date, Plan_ID, client_id_string, row_level_security_filter_value) 
    GROUP BY 
        Union2.Plan, 
        Union2.Count0, 
        Union2.Reporting_Month, 
        Union2.Category, 
        Union2.To_Date, 
        Union2.From_Date, 
        Union2.Plan_ID,
		Union2.client_id_string,
		Union2.row_level_security_filter_value
		
    ),
Union3 AS (
    SELECT * 
    FROM Query1
    UNION
    SELECT * 
    FROM Query2
),
Final AS (
    SELECT
        Plan,
        Count0,
        Reporting_Month,
        CASE 
            WHEN '00994' IN (1881, 5987) AND Category = 'Active - Not Vested' THEN 'Members in Waiting Period'
            WHEN NOT ('00994' IN (1881, 5987)) AND Category = 'Active - Not Vested' THEN Category
            ELSE Category
        END AS Final_Category,
        To_Date,
        From_Date,
        Plan_ID,
		client_id_string,
		row_level_security_filter_value
    FROM Union3
)
SELECT    
Final_Category AS Category,
client_id_string,
row_level_security_filter_value,
SUM(Count0) AS Count  

FROM Final
GROUP BY    
    Final_Category,
	client_id_string,
	row_level_security_filter_value