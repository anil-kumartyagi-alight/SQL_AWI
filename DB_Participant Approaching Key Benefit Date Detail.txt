WITH 
mv_person AS 
    (
    SELECT
    DISTINCT global_client_id
                                ,global_person_id
                                ,client_id, client_id_string
                                ,platform_person_internal_id
                                ,gender
                                ,standard_gender AS SEX_CD
                                ,CASE 
WHEN birth_date IN (
'1800-01-01'
,'1900-01-01'
,'1901-01-01'
,'1910-01-01'
,'1930-01-01'
,'0001-12-30 BC'
) THEN NULL
ELSE birth_date end as birth_date
                                ,person_reason_code
                                ,union_name
                                , platform_id
                                ,begin_date
                                ,end_date
        ,PRSN_DIMN7.last_name AS LAST_NM 
        ,PRSN_DIMN7.first_name AS FRST_NM
        ,PRSN_DIMN7.middle_name AS MID_NM 
       ,PRSN_DIMN7.is_bad_preferred_address  as BAD_ADDR_IND_CD
       ,row_level_security_filter_value

                FROM person_rpt.person PRSN_DIMN7
                WHERE
person_reason_code in( 'Employee','QDRO','Beneficiary' )AND 
                                begin_date <= last_day(<<$pAsOfdate>>)
                                AND end_date >= last_day(<<$pAsOfdate>>)
                                 AND client_id = cast(<<$pClientId>> as int)
    )
--select * from mv_person
, 

mv_person_employment
AS (
                SELECT DISTINCT global_client_id
                                ,global_person_id
                                ,client_id
                                ,platform_person_internal_id
                                ,platform_id
                                ,cast (coalesce (expected_annual_base_salary,0)  as numeric (19,4))  as expected_annual_base_salary
                                ,hourly_salary_status
                                ,fulltime_parttime_status
                                ,standard_employment_status as employment_status
                                ,hire_date
                                ,termination_date
                                ,employment_status_begin_date as effective_begin_date
                                ,employee_id
                                ,standard_value as roll_up_1
                FROM person_rpt.person_employment e 
                left join (select distinct standard_key,standard_value from adlfound_itg.standard_rollups_lookup where 
standard_group_key in ('EMPL-STAT-CD-ROLLUP1') ) s
on trim(standard_employment_status_code)=(standard_key)
                WHERE 
                --upper(trim(employment_status)) in  ('ACTIVE','INACTIVE')AND 
                begin_date <= last_day(<<$pAsOfdate>>)
                                AND end_date >= last_day(<<$pAsOfdate>>)
                                AND client_id = cast(<<$pClientId>> as int)
    
                )
-- select * from mv_person_employment 
,
pcf
AS (
                select * from person_itg.person_custom_filter 
                where client_id =cast(<<$pClientId>> as int) 
                and data_product = 'DB'
                and begin_date <= last_day(<<$pAsOfdate>>)
                     AND end_date >= last_day(<<$pAsOfdate>>)
                )			
                
                ,person
AS (
                SELECT p.global_client_id
                                ,p.global_person_id
                                ,p.client_id, p.client_id_string
                                ,p.platform_id
                                ,p.platform_person_internal_id
                                ,e.expected_annual_base_salary as salary
                                ,e.hourly_salary_status
                                ,e.fulltime_parttime_status
                                ,e.employment_status
                                ,p.person_reason_code
                                ,p.union_name
                                ,p.gender
                                ,p.FRST_NM
                                ,p.MID_NM
                                ,p.LAST_NM
                                ,p.birth_date
                                ,case WHEN p.person_reason_code = 'Employee'
                                  AND upper(e.roll_up_1) <> 'ACTIVE'
                                  AND e.termination_date IS NOT NULL
                                  AND EXTRACT(YEAR FROM e.termination_date) <> 2299
                                   THEN e.termination_date else NULL END AS termination_date
                                ,e.hire_date
                                ,e.effective_begin_date
                                ,e.employee_id
                                ,e.roll_up_1
                                ,FLOOR(CASE 
                                                WHEN p.birth_date IN (
                                                                                '1800-01-01'
                                                                                ,'1900-01-01'
                                                                                ,'1901-01-01'
                                                                                ,'1910-01-01'
                                                                                ,'1930-01-01'
                                                                                )
                                                                THEN NULL
                                                ELSE ROUND(DATEDIFF(DAY, p.birth_date, last_day(<<$pAsOfdate>>)) / 365.25, 2)
                                                END) AS age
                                ,CASE 
                                                WHEN p.person_reason_code = 'Employee'
                                                                AND upper(e.roll_up_1) = 'ACTIVE'
                                                                THEN ROUND(DATEDIFF(DAY, e.hire_date, last_day(<<$pAsOfdate>>)) / 365.25, 2)
                                                WHEN p.person_reason_code = 'Employee'
                                                                AND upper(e.roll_up_1) <> 'ACTIVE'
                                                                AND e.termination_date IS NOT NULL
                                                                AND EXTRACT(YEAR FROM e.termination_date) <> 2299
                                                                THEN ROUND(DATEDIFF(DAY, e.hire_date, e.termination_date) / 365.25, 2)
                                                ELSE NULL
                                                END AS tenure,
                                 p.row_level_security_filter_value,
    pcf.custom_filter_1, pcf.custom_filter_2, pcf.custom_filter_3, pcf.custom_filter_4, pcf.custom_filter_5,BAD_ADDR_IND_CD
                FROM mv_person p
                inner JOIN mv_person_employment e ON p.client_id = e.client_id
                                AND p.platform_person_internal_id = e.platform_person_internal_id
                                AND p.platform_id = e.platform_id
                            --  AND p.global_client_id = e.global_client_id
                                --AND p.global_person_id = e.global_person_id
                                 AND p.client_id = cast(<<$pClientId>> as int)
                
                left join pcf on p.platform_id = pcf.platform_id
                                and p.platform_person_internal_id = pcf.platform_person_internal_id
                                and p.client_id = pcf.client_id 
    --							and p.begin_date <= pcf.end_date
    --							and p.end_date >= pcf.begin_date
                
                
                )
--select * from person
,
range_lookup
AS (
                SELECT standard_group_key
                                ,standard_display_name standard_display_value
                                ,standard_min
                                ,standard_max
                                ,OWNER
                FROM adlfound_itg.standard_ranges_lookup  WHERE standard_group_key in( 'AGE_RANGE_DB', 'TENURE','SALARY_RANGE_WEALTH')
                )
,
db_person_attributes
AS (
SELECT 
a.client_id
,a.client_id_string
,a.platform_id
,a.platform_person_internal_id
,a.salary
,D.standard_display_value AS SALARY_RANGE
,a.hourly_salary_status
,a.fulltime_parttime_status
,a.employment_status
,a.person_reason_code
,a.union_name
,a.gender
,a.age
,B.standard_display_value AS AGE_RANGE
,a.tenure
,C.standard_display_value AS TENURE_RANGE
,a.row_level_security_filter_value
,a.custom_filter_1
,a.custom_filter_2
,a.custom_filter_3
,a.custom_filter_4
,a.custom_filter_5
,a.BAD_ADDR_IND_CD
,a.FRST_NM
,a.MID_NM
,a.LAST_NM
,a.birth_date
,a.termination_date
,a.hire_date
,a.effective_begin_date
,a.employee_id
,a.roll_up_1
                FROM person a
                LEFT JOIN (
                                SELECT *
                                FROM range_lookup
                                WHERE standard_group_key = 'AGE_RANGE_DB'
                                ) b ON floor(a.age) between b.standard_min AND b.standard_max 
                LEFT JOIN (
                                SELECT *
                                FROM range_lookup
                                WHERE standard_group_key = 'TENURE'
                                ) C ON floor(a.tenure) between C.standard_min AND C.standard_max 
                LEFT JOIN (
                                SELECT *
                                FROM range_lookup
                                WHERE standard_group_key = 'SALARY_RANGE_WEALTH'
                                ) D ON floor(a.salary) between D.standard_min AND D.standard_max 
                )
--select * from db_person_attributes
, 
db_plan_dim as (
select distinct client_id,plan_id,plan_ldsc_tx
from wealth_rpt.db_plan_dim 
where client_id=<<$pClientId>>
)
--select * from db_plan_dim
,

PRSN_PLANSTAT_DIMN01
AS (
 SELECT a.client_id AS CLIENT_ID
 ,a.platform_id
  ,a.platform_person_internal_id AS PRSN_INTN_ID
  ,plan_status_description 
  ,a.plan_id AS PLAN_ID
  ,c.plan_ldsc_tx as Plan_Description
 FROM wealth_rpt.person_planstatus_dim a
 INNER JOIN wealth_rpt.dc_category_dim b ON a.client_id = b.client_id
  AND a.category_id = b.category_id
  AND a.plan_id = b.plan_id
 INNER JOIN wealth_rpt.db_plan_dim c on  a.client_id = c.client_id
  AND a.plan_id = c.plan_id
 WHERE
  a.platform_indicator_code IN ('R3','R4','DBE') 
  AND b.category_type_code = 'PS'
  and a.plan_status_code='UNAV'
  AND last_day(<<$pAsOfdate>>) >= a.begin_date
  AND last_day(<<$pAsOfdate>>) <= a.end_date
  AND b.category_definition_brand_code = 'DB-AVLB'
  AND a.client_id =<<$pClientId>>
 ),
Shortcut_to_Pension_Popu_Elig_Current_All AS 
    (
    SELECT distinct
    DB_ELIG_A_FACT11.client_id,
    DB_ELIG_A_FACT11.platform_id,
        DB_ELIG_A_FACT11.platform_person_internal_id AS PRSN_INTN_ID, 
        DB_ELIG_A_FACT11.plan_id AS PLAN_ID, 
        DB_ELIG_A_FACT11.earliest_commencement_date_for_ccp AS earl_cmnc_dt_ccp, 
        DB_ELIG_A_FACT11.normal_retirement_date AS normal_retire_dt,
case when is_deferred_vested then 'Y' else 'N' end as is_deferred_vested		

        
    FROM
        wealth_rpt.db_person_plan DB_ELIG_A_FACT11 
    WHERE 
       -- <<$pAsOfdate>> <= DB_ELIG_A_FACT11.end_date AND
       --<<$pAsOfdate>> >= DB_ELIG_A_FACT11.begin_date	   and 
       DB_ELIG_A_FACT11.client_id=<<$pClientId>>
    )
    -- select * from Shortcut_to_Pension_Popu_Elig_Current_All
    ,
    Pension_Participant_Data as (
SELECT
Person.client_id,
Person.platform_id,
Person.client_id_string,
    Person.platform_person_internal_id AS Internal_ID, 
    Person.LAST_NM AS Last_Name, 
    Person.MID_NM as Middle_name,
    Person.FRST_NM AS First_Name, 
    DB_Plan_Dimension.plan_ldsc_tx AS plan_description, 
    PRSN_PLANSTAT_DIMN01.plan_status_description,
    Person.person_reason_code AS Person_Type, 
    Person.employment_status AS Employment_Status, 
    Person.effective_begin_date AS Employment_Status_Begin_Date,  
        Shortcut_to_Pension_Popu_Elig_Current_All.normal_retire_dt AS normal_retire_dt, 
    Shortcut_to_Pension_Popu_Elig_Current_All.earl_cmnc_dt_ccp AS earl_cmnc_dt_ccp,
salary,
SALARY_RANGE,
hourly_salary_status,
fulltime_parttime_status,
union_name,
gender,
age,
AGE_RANGE,
tenure,
TENURE_RANGE,
row_level_security_filter_value,
birth_date,
employee_id,
custom_filter_1,
custom_filter_2,
custom_filter_3,
custom_filter_4,
custom_filter_5,
hire_date,
is_deferred_vested,
roll_up_1
FROM
    db_person_attributes Person
                LEFT OUTER JOIN Shortcut_to_Pension_Popu_Elig_Current_All
                ON 
                    Person.platform_person_internal_id = Shortcut_to_Pension_Popu_Elig_Current_All.PRSN_INTN_ID AND
                    Person.client_id = Shortcut_to_Pension_Popu_Elig_Current_All.client_id
                    and Person.platform_id = Shortcut_to_Pension_Popu_Elig_Current_All.platform_id
                    inner JOIN
                    db_plan_dim DB_Plan_Dimension
                    on 
                    Shortcut_to_Pension_Popu_Elig_Current_All.client_id=DB_Plan_Dimension.client_id
                    and Shortcut_to_Pension_Popu_Elig_Current_All.PLAN_ID=DB_Plan_Dimension.plan_id
                    left outer join PRSN_PLANSTAT_DIMN01 
                    on PRSN_PLANSTAT_DIMN01.PLAN_ID=Shortcut_to_Pension_Popu_Elig_Current_All.PLAN_ID
                    and PRSN_PLANSTAT_DIMN01.PRSN_INTN_ID=Shortcut_to_Pension_Popu_Elig_Current_All.PRSN_INTN_ID
                    and PRSN_PLANSTAT_DIMN01.platform_id=Shortcut_to_Pension_Popu_Elig_Current_All.platform_id

where PRSN_PLANSTAT_DIMN01.PRSN_INTN_ID is null)
--select * from Pension_Participant_Data
,
Qry_Pension_Participant_Data_70_5 AS 
    (
    SELECT
    client_id,
    platform_id,
    client_id_string,
        DB_Participant_Data.Internal_ID AS Person_Internal_ID, 
        DB_Participant_Data.Last_Name AS Last_Name, 
        Middle_name,
        DB_Participant_Data.First_Name AS First_Name, 
        DB_Participant_Data.Person_Type AS Person_Reason_Description, 
        DB_Participant_Data.birth_date AS Birth_Date,
        'Approaching 70.5' AS Key_Date_Type, 
        cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) AS Key_Date, 
        CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > <<$pAsOfdate>> AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Inactive, 
        CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > <<$pAsOfdate>> AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Active,
        plan_description,
        plan_status_description,
        DB_Participant_Data.Employment_Status,
        roll_up_1,
        employee_id,
custom_filter_1,
custom_filter_2,
custom_filter_3,
custom_filter_4,
custom_filter_5,
row_level_security_filter_value,
gender,
age,
AGE_RANGE,
tenure,
TENURE_RANGE,
salary,
SALARY_RANGE,
Employment_Status_Begin_Date,
hourly_salary_status,
fulltime_parttime_status,
union_name,
hire_date


    FROM
        Pension_Participant_Data DB_Participant_Data
    WHERE 
Person_Type in( 'Employee','QDRO','Beneficiary' ) AND
       ( CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > <<$pAsOfdate>> AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N' OR
        CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > <<$pAsOfdate>> AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N')
        
   GROUP BY 
   client_id,
   platform_id,
   client_id_string,
   DB_Participant_Data.Internal_ID , 
        DB_Participant_Data.Last_Name , 
        Middle_name,
        DB_Participant_Data.First_Name , 
        DB_Participant_Data.Person_Type , 
        DB_Participant_Data.birth_date,
       -- 'Approaching 70.5', 
        cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date), 
        CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > <<$pAsOfdate>> AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END , 
        CASE 
            WHEN 
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) > <<$pAsOfdate>> AND
                cast(dateadd(months, cast(floor(846) as int), DB_Participant_Data.birth_date) as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END,
        plan_description,
        plan_status_description,
        DB_Participant_Data.Employment_Status,
        roll_up_1,
        employee_id,
custom_filter_1,
custom_filter_2,
custom_filter_3,
custom_filter_4,
custom_filter_5,
row_level_security_filter_value,
gender,
age,
AGE_RANGE,
tenure,
TENURE_RANGE,
salary,
SALARY_RANGE,
Employment_Status_Begin_Date,
hourly_salary_status,
fulltime_parttime_status,
union_name,
hire_date
     
    )
--select * from Qry_Pension_Participant_Data_70_5
    ,
Qry_Pension_Participant_Data_ECD AS 
    (
    SELECT
    client_id,
    platform_id,
    client_id_string,
        DB_Participant_Data.Internal_ID AS Person_Internal_ID, 
        DB_Participant_Data.Last_Name AS Last_Name, 
        Middle_name,
        DB_Participant_Data.First_Name AS First_Name, 
        DB_Participant_Data.Person_Type AS Person_Reason_Description, 
        DB_Participant_Data.birth_date AS Birth_Date,
        'Earliest Commencement Date' AS Key_Date_Type, 
        cast(earl_cmnc_dt_ccp as date) AS Key_Date, 
        CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > <<$pAsOfdate>> AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Inactive, 
        CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > <<$pAsOfdate>> AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Active,
        plan_description,
        plan_status_description,
        DB_Participant_Data.Employment_Status,
        roll_up_1,
        employee_id,
custom_filter_1,
custom_filter_2,
custom_filter_3,
custom_filter_4,
custom_filter_5,
row_level_security_filter_value,
gender,
age,
AGE_RANGE,
tenure,
TENURE_RANGE,
salary,
SALARY_RANGE,
Employment_Status_Begin_Date,
hourly_salary_status,
fulltime_parttime_status,
union_name,
hire_date


    FROM
        Pension_Participant_Data DB_Participant_Data
    WHERE 
Person_Type in( 'Employee','QDRO','Beneficiary' ) AND
       ( CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > <<$pAsOfdate>> AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N' OR
        CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > <<$pAsOfdate>> AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N')
        
   GROUP BY 
   client_id,
   platform_id,
   client_id_string,
   DB_Participant_Data.Internal_ID , 
        DB_Participant_Data.Last_Name , 
        Middle_name,
        DB_Participant_Data.First_Name , 
        DB_Participant_Data.Person_Type , 
        DB_Participant_Data.birth_date,
        cast(earl_cmnc_dt_ccp as date), 
        CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > <<$pAsOfdate>> AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END , 
        CASE 
            WHEN 
                cast(earl_cmnc_dt_ccp as date) > <<$pAsOfdate>> AND
                cast(earl_cmnc_dt_ccp as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END,
        plan_description,
        plan_status_description,
        DB_Participant_Data.Employment_Status,
        roll_up_1,
        employee_id,
custom_filter_1,
custom_filter_2,
custom_filter_3,
custom_filter_4,
custom_filter_5,
row_level_security_filter_value,
gender,
age,
AGE_RANGE,
tenure,
TENURE_RANGE,
salary,
SALARY_RANGE,
Employment_Status_Begin_Date,
hourly_salary_status,
fulltime_parttime_status,
union_name,
hire_date
     
    )
--select * from Qry_Pension_Participant_Data_ECD
,
Qry_Pension_Participant_Data_NRD AS 
    (
    SELECT
    client_id,
    platform_id,
    client_id_string,
        DB_Participant_Data.Internal_ID AS Person_Internal_ID, 
        DB_Participant_Data.Last_Name AS Last_Name, 
        Middle_name,
        DB_Participant_Data.First_Name AS First_Name, 
        DB_Participant_Data.Person_Type AS Person_Reason_Description, 
        DB_Participant_Data.birth_date AS Birth_Date,
        'Approaching NRD' AS Key_Date_Type, 
        cast(normal_retire_dt as date) AS Key_Date, 
        CASE 
            WHEN 
                cast(normal_retire_dt as date) > <<$pAsOfdate>> AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Inactive, 
        CASE 
            WHEN 
                cast(normal_retire_dt as date) > <<$pAsOfdate>> AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END AS C3_Months_Active,
plan_description,
plan_status_description,
DB_Participant_Data.Employment_Status,
roll_up_1,
employee_id,
custom_filter_1,
custom_filter_2,
custom_filter_3,
custom_filter_4,
custom_filter_5,
row_level_security_filter_value,
gender,
age,
AGE_RANGE,
tenure,
TENURE_RANGE,
salary,
SALARY_RANGE,
Employment_Status_Begin_Date,
hourly_salary_status,
fulltime_parttime_status,
union_name,
hire_date


    FROM
        Pension_Participant_Data DB_Participant_Data
    WHERE 
Person_Type in( 'Employee','QDRO','Beneficiary' ) AND
       ( CASE 
            WHEN 
                cast(normal_retire_dt as date) > <<$pAsOfdate>> AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N' OR
        CASE 
            WHEN 
                cast(normal_retire_dt as date) > <<$pAsOfdate>> AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END <> 'N')
        
   GROUP BY 
   client_id,
   platform_id,
   client_id_string,
   DB_Participant_Data.Internal_ID , 
        DB_Participant_Data.Last_Name , 
        Middle_name,
        DB_Participant_Data.First_Name , 
        DB_Participant_Data.Person_Type , 
        DB_Participant_Data.birth_date,
    --    'Approaching 70.5', 
        cast(normal_retire_dt as date), 
        CASE 
            WHEN 
                cast(normal_retire_dt as date) > <<$pAsOfdate>> AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1)  IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) IN ( 
                    'INACTIVE', 
                    'DNM' ) AND
                DB_Participant_Data.is_deferred_vested = 'Y'
                THEN
                    'Y'
            ELSE 'N'
        END , 
        CASE 
            WHEN 
                cast(normal_retire_dt as date) > <<$pAsOfdate>> AND
                cast(normal_retire_dt as date) <= last_day(dateadd(months, 3, <<$pAsOfdate>>)) AND
                UPPER(
                    CASE 
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 'INACTIVE','DNM')
                            THEN
                                'INACTIVE'
                        WHEN 
                            UPPER(DB_Participant_Data.roll_up_1) IN ( 
                                'ACTIVE' )
                            THEN
                                'ACTIVE'
                    END) = 'ACTIVE'
                THEN
                    'Y'
            ELSE 'N'
        END,
        plan_description,
        plan_status_description,
        DB_Participant_Data.Employment_Status,
        roll_up_1,
        employee_id,
custom_filter_1,
custom_filter_2,
custom_filter_3,
custom_filter_4,
custom_filter_5,
row_level_security_filter_value,
gender,
age,
AGE_RANGE,
tenure,
TENURE_RANGE,
salary,
SALARY_RANGE,
Employment_Status_Begin_Date,
hourly_salary_status,
fulltime_parttime_status,
union_name,
hire_date
     
    )
--select * from Qry_Pension_Participant_Data_NRD
, main as (
select 
client_id,
client_id_string,
Person_Internal_ID as platform_person_internal_id,
platform_id,
		  
Last_Name,
Middle_name,
First_Name,
Person_Reason_Description,
Birth_Date,
Key_Date_Type, 
Key_Date, 
C3_Months_Inactive, 
C3_Months_Active,
plan_description,
plan_status_description,
Employment_Status,
employee_id,
custom_filter_1,
custom_filter_2,
custom_filter_3,
custom_filter_4,
custom_filter_5,
row_level_security_filter_value,
gender,
age,
AGE_RANGE,
tenure,
TENURE_RANGE,
salary,
SALARY_RANGE,
Employment_Status_Begin_Date,
hourly_salary_status,
fulltime_parttime_status,
union_name,
hire_date

from 
(
select * from Qry_Pension_Participant_Data_70_5
union all 
select * from Qry_Pension_Participant_Data_ECD
union ALL
select * from Qry_Pension_Participant_Data_NRD
)Union1(client_id, platform_id, client_id_string, Person_Internal_ID, Last_Name, Middle_name, First_Name, Person_Reason_Description, Birth_Date, Key_Date_Type, Key_Date, C3_Months_Inactive, C3_Months_Active, plan_description, plan_status_description,Employment_Status, roll_up_1, employee_id, custom_filter_1, custom_filter_2, custom_filter_3, custom_filter_4, custom_filter_5, row_level_security_filter_value, gender, age, AGE_RANGE, tenure, TENURE_RANGE, salary, SALARY_RANGE, Employment_Status_Begin_Date, hourly_salary_status, fulltime_parttime_status, union_name, hire_date))

Select * from main
