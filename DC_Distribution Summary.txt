WITH dc_distributions_data AS (
    SELECT
        client_id,
        platform_id,
        platform_person_internal_id,
        plan_id,
        payment_result_effective_date,
        gross_distribution_amount,
        total_rollover_amount,
        rollover_ira_amount,
        rollover_qualified_plan_amount,
        non_rollover_amount,
        activity_reference_number_id,
        platform_indicator_code
    FROM wealth_rpt.vw_dc_distributions
    WHERE client_id = cast(<<$pClientId>> as int)
      AND payment_result_effective_date BETWEEN <<$pBeginDate>> AND <<$pEndDate>>
),
unique_dist_persons AS (
    SELECT DISTINCT client_id, platform_id, platform_person_internal_id
    FROM dc_distributions_data
),
person_data AS (
    SELECT
        client_id,
        client_id_string,
        platform_id,
        platform_person_internal_id,
        last_name,
        first_name,
        middle_name,
        gender,
        birth_date,
        union_name,
        person_reason_code,
        begin_date,
        end_date
    FROM person_rpt.person p
    WHERE client_id = cast(<<$pClientId>> as int)
      AND <<$pEndDate>> BETWEEN begin_date AND end_date
      AND EXISTS (
          SELECT 1
          FROM unique_dist_persons udp
          WHERE udp.platform_person_internal_id = p.platform_person_internal_id
            AND udp.platform_id = p.platform_id
            AND udp.client_id = p.client_id
      )
),
employment_data AS (
    SELECT
        client_id,
        platform_id,
        platform_person_internal_id,
        employee_id,
        standard_employment_status,
        standard_value AS employment_status,
        hire_date,
        termination_date,
        expected_annual_base_salary,
        fulltime_parttime_status,
        hourly_salary_status,
        employment_status_begin_date
    FROM person_rpt.person_employment p
    LEFT OUTER JOIN adlfound_itg.standard_rollups_lookup rl
    ON p.standard_employment_status_code = rl.standard_key
    AND standard_group_key in ('EMPL-STAT-CD-ROLLUP1')
    WHERE client_id = cast(<<$pClientId>> as int)
      AND <<$pEndDate>> BETWEEN begin_date AND end_date
      AND EXISTS (
          SELECT 1
          FROM unique_dist_persons udp
          WHERE udp.platform_person_internal_id = p.platform_person_internal_id
            AND udp.platform_id = p.platform_id
            AND udp.client_id = p.client_id
      )
),
security_filter AS (
    SELECT
        client_id,
        platform_id,
        platform_person_internal_id,
        row_level_security_filter_value
    FROM person_itg.person_security_filter psf
    WHERE client_id = cast(<<$pClientId>> as int)
        AND EXISTS (
            SELECT 1
            FROM unique_dist_persons udp
            WHERE udp.platform_person_internal_id = psf.platform_person_internal_id
              AND udp.platform_id = psf.platform_id
              AND udp.client_id = psf.client_id
        )
),
custom_filter AS (
    SELECT
        client_id,
        platform_id,
        platform_person_internal_id,
        begin_date,
        end_date,
        data_product,
        custom_filter_1,
        custom_filter_2,
        custom_filter_3,
        custom_filter_4,
        custom_filter_5
    FROM person_itg.person_custom_filter pcf
    WHERE client_id = cast(<<$pClientId>> as int)
      AND <<$pEndDate>> BETWEEN begin_date AND end_date
      AND data_product = 'DC'
        AND EXISTS (
            SELECT 1
            FROM unique_dist_persons udp
            WHERE udp.platform_person_internal_id = pcf.platform_person_internal_id
              AND udp.platform_id = pcf.platform_id
              AND udp.client_id = pcf.client_id
        )
),
plan_data AS (
    SELECT
        plan_id,
        client_id,
        platform_id,
        plan_type_code,
        plan_long_description
    FROM wealth_rpt.dc_plan_dim
    WHERE plan_type_code = 'DC'
      AND client_id = cast(<<$pClientId>> as int)
),
Join_base_elmnt_id AS (
    SELECT 
        inst_elmnt.base_element_id AS base_elmnt_id,
        inst_elmnt.client_id AS client_id,
        inst_elmnt.data_instance_id AS data_inst_id
    FROM adlfound_itg.ccr_instance_element inst_elmnt
    WHERE inst_elmnt.client_id = cast(<<$pClientId>> as int)     
      AND base_element_id IN (100780,100790,100800,101810,101820,101830,102050)
),
Join_ccr_act_ids AS (
    SELECT 
        ccr_inst.client_id AS client_id,
        base_elmnt.base_elmnt_id,
        TRIM(ccr_inst.provision_key_value) AS act_id,
        ccr_inst.platform_indicator_code
    FROM Join_base_elmnt_id base_elmnt
    INNER JOIN adlfound_itg.ccr_instance ccr_inst 
    ON base_elmnt.client_id = ccr_inst.client_id
    AND base_elmnt.data_inst_id = ccr_inst.data_instance_id
    WHERE ccr_inst.base_provision_type_id = 1000000
      AND trim(ccr_inst.practice_code) = 'DC'
),
activity_data AS (
    SELECT
        client_id,
        platform_id, activity_id,
        platform_person_internal_id,
        activity_reference_id,
        activity_name, activity_effective_date,
        domain
    FROM alightops_rpt.person_activity pa
    WHERE client_id = cast(<<$pClientId>> as int)
    AND activity_effective_date >= <<$pBeginDate>>
    AND activity_effective_date <= <<$pEndDate>>
      AND domain = 'DC'
        AND EXISTS (
            SELECT 1
            FROM dc_distributions_data dd
            WHERE dd.platform_person_internal_id = pa.platform_person_internal_id
              AND dd.platform_id = pa.platform_id
              AND dd.client_id = pa.client_id
              AND dd.activity_reference_number_id = pa.activity_reference_id
        )
),
main_query AS (
    SELECT
        person.client_id AS Client_ID,
        person.client_id_string,
        person.platform_person_internal_id AS Person_Internal_ID,
        person.gender AS Gender,
        FLOOR(DATEDIFF(day, person.birth_date, <<$pEndDate>>) / 365.25) AS Age,
        CASE
            WHEN person.person_reason_code = 'Employee' AND UPPER(employee.employment_status) = 'ACTIVE'
                THEN FLOOR(DATEDIFF(DAY, employee.hire_date, <<$pEndDate>>) / 365.25)
            WHEN person.person_reason_code = 'Employee' AND UPPER(employee.employment_status) <> 'ACTIVE'
                 AND employee.termination_date IS NOT NULL AND EXTRACT(YEAR FROM employee.termination_date) <> 2299
                THEN FLOOR(DATEDIFF(DAY, employee.hire_date, employee.termination_date) / 365.25)
            ELSE NULL
        END AS Length_Of_Employment,
        FLOOR(employee.expected_annual_base_salary) AS Salary,
        employee.fulltime_parttime_status AS FullTime_PartTime,
        employee.hourly_salary_status AS Salary_Hourly,
        person.union_name AS Union,
        person.person_reason_code AS Person_Type,
        employee.standard_employment_status AS Employment_Status,
		-- employee.employment_status_begin_date AS Employment_Status_Begin_Date,
        dc_plan_dimn.plan_long_description AS Plan_Name,
        --prsn_act.activity_name AS Payment_Type,								 
        CASE 
            WHEN CCR.BASE_ELMNT_ID = 100780
                THEN 'Hardship Withdrawals'
            WHEN CCR.BASE_ELMNT_ID = 101830
                THEN 'Non Hardship Withdrawals'
            WHEN CCR.BASE_ELMNT_ID = 101810
                THEN '59.5 Withdrawal'
            WHEN CCR.BASE_ELMNT_ID = 100790
                THEN 'Military Leave Withdrawals'
            WHEN CCR.BASE_ELMNT_ID = 102050
                THEN 'Emergency Relief'
            WHEN CCR.BASE_ELMNT_ID = 100800
                THEN 'Partial Withdrawal'
            WHEN CCR.BASE_ELMNT_ID = 101820
                THEN 'Total Distributions'
            ELSE 'Others'
        END Activity_Type,
        dc_distributions.gross_distribution_amount AS Gross_Distribution_Amount,
        dc_distributions.total_rollover_amount AS Total_Rollover_Amount,
        dc_distributions.rollover_ira_amount AS Rollover_Amount_IRA,
        dc_distributions.rollover_qualified_plan_amount AS Rollover_Amount_Qualified_Plan,
        dc_distributions.non_rollover_amount AS Amount_Not_Rolled_Over,
        psf.row_level_security_filter_value,
        pcf.custom_filter_1, pcf.custom_filter_2, pcf.custom_filter_3, pcf.custom_filter_4, pcf.custom_filter_5
        --,dc_distributions.platform_indicator_code
    FROM person_data person
    LEFT JOIN employment_data employee ON
        person.client_id = employee.client_id AND
        person.platform_id = employee.platform_id AND
        person.platform_person_internal_id = employee.platform_person_internal_id
    LEFT JOIN security_filter psf ON
        person.platform_id = psf.platform_id AND
        person.platform_person_internal_id = psf.platform_person_internal_id AND
        person.client_id = psf.client_id
    LEFT JOIN custom_filter pcf ON
        person.platform_id = pcf.platform_id AND
        person.platform_person_internal_id = pcf.platform_person_internal_id AND
        person.client_id = pcf.client_id
    INNER JOIN dc_distributions_data dc_distributions ON
        person.client_id = dc_distributions.client_id AND
        person.platform_id = dc_distributions.platform_id AND
        person.platform_person_internal_id = dc_distributions.platform_person_internal_id
    INNER JOIN plan_data dc_plan_dimn ON
        dc_plan_dimn.plan_id = dc_distributions.plan_id AND
        dc_plan_dimn.client_id = dc_distributions.client_id AND
        dc_plan_dimn.platform_id = dc_distributions.platform_id
    INNER JOIN activity_data prsn_act ON
        prsn_act.client_id = dc_distributions.client_id AND
        prsn_act.platform_id = dc_distributions.platform_id AND
        prsn_act.platform_person_internal_id = dc_distributions.platform_person_internal_id AND
        prsn_act.activity_reference_id = dc_distributions.activity_reference_number_id
    LEFT JOIN Join_ccr_act_ids CCR
    ON prsn_act.client_id = CCR.client_id
    AND prsn_act.activity_id = CCR.act_id
    AND dc_distributions.platform_indicator_code = CCR.platform_indicator_code
),
age_range AS (
    SELECT
        standard_min,
        standard_max,
        standard_display_name
    FROM adlfound_itg.standard_ranges_lookup
    WHERE standard_group_key = 'AGE_RANGE_DC'
),
tenure_range AS (
    SELECT
        standard_min,
        standard_max,
        standard_display_name
    FROM adlfound_itg.standard_ranges_lookup
    WHERE standard_group_key = 'TENURE'
),
salary_range AS (
    SELECT
        standard_min,
        standard_max,
        standard_display_name
    FROM adlfound_itg.standard_ranges_lookup
    WHERE standard_group_key = 'SALARY_RANGE_WEALTH'
)
SELECT 
    mq.*, 
    ar.standard_display_name AS Age_Range,
    sr.standard_display_name AS Salary_Range,
    tr.standard_display_name AS Employment_Range
FROM main_query mq
LEFT JOIN age_range ar ON FLOOR(mq.Age) BETWEEN ar.standard_min AND ar.standard_max
LEFT JOIN tenure_range tr ON FLOOR(mq.Length_Of_Employment) BETWEEN tr.standard_min AND tr.standard_max
LEFT JOIN salary_range sr ON FLOOR(mq.Salary) BETWEEN sr.standard_min AND sr.standard_max