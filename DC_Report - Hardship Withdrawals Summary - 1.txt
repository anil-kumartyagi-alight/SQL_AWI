-- hardship_withdrawal_percentage = sum(num_ppt_hardship_withdrawal) / sum(num_ppt_hardship_withdrawal+num_ppt_non_hardship_withdrawal)
-- non_hardship_withdrawal_percentage = sum(num_ppt_non_hardship_withdrawal) / sum(num_ppt_hardship_withdrawal+num_ppt_non_hardship_withdrawal)
-- avg_hardship_dollars = sum(hardship_dollar_amount) / sum(num_ppt_hardship_withdrawal)


WITH DateRange as(
	SELECT 
		<<$pBeginDate>> AS cal_begin_date,
		<<$pEndDate>> AS cal_end_date
	UNION ALL 
	SELECT 
		DATEADD(YEAR, -1, <<$pBeginDate>>) AS cal_begin_date,
		DATEADD(YEAR, -1, <<$pEndDate>>) AS cal_end_date
	UNION ALL 
	SELECT 
		DATEADD(YEAR, -2, <<$pBeginDate>>) AS cal_begin_date,
		DATEADD(YEAR, -2, <<$pEndDate>>) AS cal_end_date
	),
mv_person
AS (
	SELECT DISTINCT 
		client_id, platform_id,
		client_id_string
		,platform_person_internal_id
		,gender
		,birth_date
		,person_reason_code
		,union_name
		,cal_end_date
		 ,begin_date
        ,end_date
	FROM person_rpt.person
	INNER JOIN DateRange
		ON begin_date <= cal_end_date
		AND end_date >= cal_end_date
		AND client_id = cast(<<$pClientId>> as int)
	WHERE person_reason_code = 'Employee'	
	)
	,mv_person_employment
AS (
	SELECT DISTINCT 
		client_id
		,platform_id
		,platform_person_internal_id
		,expected_annual_base_salary
		,hourly_salary_status
		,fulltime_parttime_status
		--,employment_status
		,hire_date
		,termination_date
		,cal_end_date
		,standard_value AS employment_status
	FROM person_rpt.person_employment pe
	INNER JOIN DateRange
		ON begin_date <= cal_end_date
		AND end_date >= cal_end_date
		AND client_id = cast(<<$pClientId>> as int)
	LEFT OUTER JOIN adlfound_itg.standard_rollups_lookup rl
	ON pe.standard_employment_status_code = rl.standard_key
	AND standard_group_key in ('EMPL-STAT-CD-ROLLUP1')
	)
	,psf
AS (
				select * from person_itg.person_security_filter 
				where client_id =cast(<<$pClientId>>as int) 

				
				)
				, pcf
AS (
				select * from person_itg.person_custom_filter 
				where client_id =cast(<<$pClientId>>as int) 
				--and data_product = 'DB'
				)	
				
	,person
AS (
	SELECT 
		p.client_id, client_id_string
		,p.platform_person_internal_id
		,e.expected_annual_base_salary
		,e.hourly_salary_status
		,e.fulltime_parttime_status
		,e.employment_status
		,p.person_reason_code
		,p.union_name
		,p.gender
		,floor(CASE 
			WHEN p.birth_date IN (
					'1800-01-01'
					,'1900-01-01'
					,'1901-01-01'
					,'1910-01-01'
					,'1930-01-01'
					)
				THEN NULL
			ELSE ROUND(DATEDIFF(DAY, p.birth_date, last_day(p.cal_end_date)) / 365.25, 2)
			END) AS age
		,CASE 
			WHEN p.person_reason_code = 'Employee'
				AND upper(e.employment_status) = 'ACTIVE'
				THEN ROUND(DATEDIFF(DAY, e.hire_date, last_day(p.cal_end_date)) / 365.25, 2)
			WHEN p.person_reason_code = 'Employee'
				AND upper(e.employment_status) <> 'ACTIVE'
				AND e.termination_date IS NOT NULL
				AND EXTRACT(YEAR FROM e.termination_date) <> 2299
				THEN ROUND(DATEDIFF(DAY, e.hire_date, e.termination_date) / 365.25, 2)
			ELSE NULL
			END AS tenure
		,p.cal_end_date,
		psf.row_level_security_filter_value,
    pcf.custom_filter_1, pcf.custom_filter_2, pcf.custom_filter_3, pcf.custom_filter_4, pcf.custom_filter_5	
	FROM mv_person p
	INNER JOIN mv_person_employment e ON p.client_id = e.client_id
		AND p.platform_person_internal_id = e.platform_person_internal_id
		AND p.platform_id = e.platform_id
		AND p.cal_end_date = e.cal_end_date
		AND p.client_id = cast(<<$pClientId>> as int)
		left join psf on p.platform_id = psf.platform_id
								and p.platform_person_internal_id = psf.platform_person_internal_id
								and p.client_id = psf.client_id 				
                
				left join pcf on p.platform_id = pcf.platform_id
								and p.platform_person_internal_id = pcf.platform_person_internal_id
								and p.client_id = pcf.client_id 
								and <<$pEndDate>> <= pcf.end_date
								and <<$pEndDate>> >= pcf.begin_date
	)
	,PRSN_PLANSTAT_DIMN01
AS (
	SELECT a.client_id AS CLIENT_ID
		,a.platform_person_internal_id AS PRSN_INTN_ID
		,a.begin_date AS PP_STAT_EFBEG_DT
		,a.plan_status_code AS PLAN_STAT_CD
		,a.participation_status_code AS prtc_stat_cd
		,a.platform_indicator_code AS PLFM_IND_CD
		,a.plan_id AS PLAN_ID
		,b.category_type_code AS CAT_TYPE_CD
		,cal_end_date
		,MAX(begin_date) OVER (
			PARTITION BY a.client_id
			,a.plan_id
			,a.platform_person_internal_id
			,a.category_id
			,cal_end_date
			) AS MAX_PP_STAT_EFBEG_DT
	FROM wealth_rpt.person_planstatus_dim a
	INNER JOIN DateRange
		ON cal_end_date >= a.begin_date
		AND cal_end_date <= a.end_date
		AND a.client_id = cast(<<$pClientId>> as int)
	INNER JOIN wealth_rpt.dc_category_dim b ON a.client_id = b.client_id
		AND a.category_id = b.category_id
		AND a.plan_id = b.plan_id
		AND b.category_type_code = 'PS'
		AND b.category_definition_brand_code = 'PRTC-STAT'
	WHERE
		a.platform_indicator_code IN ('R3','R4','DCE') 
	)
	,PRSN_PLANSTAT_DIMN
AS (
	SELECT DISTINCT CLIENT_ID
		,PLAN_ID
		,PRSN_INTN_ID
		,prtc_stat_cd
		,plfm_ind_cd
		--,CAT_TYPE_CD
		,MAX_PP_STAT_EFBEG_DT
		,CAL_END_DATE
	FROM PRSN_PLANSTAT_DIMN01
	WHERE MAX_PP_STAT_EFBEG_DT = PP_STAT_EFBEG_DT
	)
	,person_planstat
AS (
	SELECT 
		p.client_id, p.client_id_string
		,p.platform_person_internal_id
		,p.expected_annual_base_salary
		,p.hourly_salary_status
		,p.fulltime_parttime_status
		,p.person_reason_code
		,p.union_name
		,p.gender
		,p.employment_status
		,p.age
		,p.tenure
		,d.prtc_stat_cd
		,d.plfm_ind_cd
		,d.plan_id
		,p.cal_end_date
			,p.row_level_security_filter_value,
    p.custom_filter_1, p.custom_filter_2, p.custom_filter_3, p.custom_filter_4, p.custom_filter_5	
	FROM prsn_planstat_dimn d
	INNER JOIN person p ON p.client_id = d.client_id
		AND p.platform_person_internal_id = d.prsn_intn_id
		AND p.cal_end_date = d.cal_end_date
	WHERE d.plfm_ind_cd IN ('R3','R4','DCE')
		--AND UPPER(TRIM(p.employment_status)) in ('ACTIVE')
		AND UPPER(TRIM(prtc_stat_cd)) = 'ACTIVE'
	)
	,dc_plan_dimn
AS (
	SELECT client_id
		,plan_brand_code as plan_brnd_cd
		,plan_long_description as plan_ldsc_tx
		,plan_id
	FROM wealth_rpt.dc_plan_dim
	WHERE client_id = cast(<<$pClientId>> as int)
		AND plan_type_code = 'DC'
	)
	,person_data
AS (
	SELECT a.client_id, a.client_id_string
		,a.platform_person_internal_id
		,a.expected_annual_base_salary AS salary
		,a.hourly_salary_status
		,a.fulltime_parttime_status
		,a.person_reason_code
		,a.union_name
		,a.gender
		,a.employment_status
		,(a.age) as age
		,(a.tenure) as tenure
		,a.prtc_stat_cd
		,a.plfm_ind_cd
		,a.plan_id
		,b.plan_brnd_cd
		,b.plan_ldsc_tx
		,a.cal_end_date
		,a.row_level_security_filter_value,
    a.custom_filter_1, a.custom_filter_2, a.custom_filter_3, a.custom_filter_4, a.custom_filter_5
	FROM person_planstat a
	LEFT JOIN dc_plan_dimn b ON a.client_id = b.client_id
		AND a.plan_id = b.plan_id
	)
	,range_lookup
AS (
	SELECT standard_group_key
		,standard_display_name
		,standard_min
		,standard_max
		,OWNER
	FROM adlfound_itg.standard_ranges_lookup
	)
	,dc_person_attributes
AS (
	SELECT a.client_id, a.client_id_string
		,a.platform_person_internal_id
		,a.hourly_salary_status
		,a.fulltime_parttime_status
		,a.union_name
		,a.gender
		,a.employment_status
		,a.prtc_stat_cd
		,a.plan_id
		,a.plan_brnd_cd
		,a.plan_ldsc_tx
		,a.cal_end_date
		,B.standard_display_name AS AGE_RANGE
		,C.standard_display_name AS TENURE_RANGE
		,D.standard_display_name AS SALARY_RANGE
		,a.row_level_security_filter_value,
    a.custom_filter_1, a.custom_filter_2, a.custom_filter_3, a.custom_filter_4, a.custom_filter_5
	FROM person_data a
	LEFT JOIN (
		SELECT *
		FROM range_lookup
		WHERE standard_group_key = 'AGE_RANGE_DC'
		) b ON floor (a.age) between (b.standard_min) AND (b.standard_max)
	LEFT JOIN (
		SELECT *
		FROM range_lookup
		WHERE standard_group_key = 'TENURE'
		) C ON floor (a.tenure) between (C.standard_min) AND (C.standard_max)
	LEFT JOIN ( 
		SELECT *
		FROM range_lookup
		WHERE standard_group_key = 'SALARY_RANGE_WEALTH'
		) D ON floor(a.salary) between (D.standard_min) AND (D.standard_max)
	)
	,hard_balance
AS (
	SELECT dhb.client_id
		,dhb.plan_id
		,dhb.platform_person_internal_id
		,(bs.effective_date) AS cal_end_date
		,SUM(dhb.closing_units*bs.daily_price) AS plan_balance
	FROM wealth_rpt.dc_hard_balance dhb
	INNER JOIN DateRange
		ON dhb.begin_date <= cal_end_date
		AND dhb.end_date >= cal_end_date
		AND dhb.closing_units > 0
		AND dhb.client_id =  cast(<<$pClientId>> as int)
	INNER JOIN wealth_rpt.buysell_fund_prices bs
		ON dhb.client_id = bs.client_id 
		AND dhb.fund_id = bs.fund_id
		AND bs.effective_date = cal_end_date
	GROUP BY dhb.client_id
		,dhb.plan_id
		,dhb.platform_person_internal_id
		,bs.effective_date
	)
	,join_person_balance
AS (
	SELECT DISTINCT p.client_id, p.client_id_string
		,p.platform_person_internal_id
		,p.SALARY_RANGE
		,p.hourly_salary_status
		,p.prtc_stat_cd
		,p.fulltime_parttime_status
		,p.union_name
		,p.gender
		,p.AGE_RANGE
		,p.TENURE_RANGE
		,p.plan_id
		,p.plan_ldsc_tx
		,pb.plan_balance
		,p.cal_end_date
		,p.row_level_security_filter_value,p.custom_filter_1, p.custom_filter_2, p.custom_filter_3, p.custom_filter_4, p.custom_filter_5
	FROM dc_person_attributes p 
	LEFT JOIN hard_balance pb ON pb.client_id = p.client_id
		AND pb.plan_id = p.plan_id
		AND pb.platform_person_internal_id = p.platform_person_internal_id
		AND pb.cal_end_date = p.cal_end_date
	)
	,   
Join_base_elmnt_id AS (
    SELECT 
        inst_elmnt.base_element_id AS base_elmnt_id,
        inst_elmnt.client_id AS client_id,
        inst_elmnt.data_instance_id AS data_inst_id
    FROM adlfound_itg.ccr_instance_element inst_elmnt
    WHERE inst_elmnt.client_id IN ( cast(<<$pClientId>> as int)) 
    AND base_element_id IN (100780,101830, 101810, 100790,102050)
),
Join_ccr_act_ids AS (
    SELECT 
        ccr_inst.client_id AS client_id,
        base_elmnt.base_elmnt_id,
        TRIM(ccr_inst.provision_key_value) AS act_id
    FROM Join_base_elmnt_id base_elmnt
    INNER JOIN adlfound_itg.ccr_instance ccr_inst
    ON base_elmnt.client_id = ccr_inst.client_id
    AND base_elmnt.data_inst_id = ccr_inst.data_instance_id
    WHERE ccr_inst.base_provision_type_id = 1000000
),
dc_distributions AS (
    SELECT 
        client_id,
		platform_id,
        platform_person_internal_id,
        platform_indicator_code,
        plan_id,
        activity_reference_number_id,
        payment_result_effective_date,
        activity_id,
		gross_distribution_amount,
		last_day(payment_result_effective_date) as payment_end_date
    FROM wealth_rpt.vw_dc_distributions
	INNER JOIN DateRange
		ON payment_result_effective_date >= cal_begin_date 
		AND payment_result_effective_date <= cal_end_date
		AND client_id = cast(<<$pClientId>> as int)
),

ranked_activity AS (
    SELECT
        pa.client_id,
        pa.platform_id,
		pa.activity_id,
		pa.activity_status,
        pa.platform_person_internal_id,
        pa.activity_reference_id,         
        pa.activity_name,
        pa.activity_effective_date,
        pa.domain,
        pa.activity_change_cst_ts,
        ROW_NUMBER() OVER (
            PARTITION BY pa.client_id,
                         pa.platform_id,
                         pa.platform_person_internal_id,
                         pa.activity_reference_id
            ORDER BY pa.activity_change_cst_ts DESC
        ) AS rnk
    FROM alightops_rpt.person_activity pa
    WHERE pa.client_id = CAST(<<$pClientId>> AS INT)
),
activity_data AS (
    SELECT
        ra.client_id,
        ra.platform_id,
		ra.activity_id,
		ra.activity_status,
        ra.platform_person_internal_id,
        ra.activity_reference_id,
        ra.activity_name,
        ra.domain,
		ra.activity_effective_date,
        ra.activity_change_cst_ts
    FROM ranked_activity ra
    WHERE ra.rnk = 1
      -- AND ra.activity_effective_date BETWEEN <<$pBeginDate>> AND <<$pEndDate>>
      AND ra.domain = 'DC'
      AND EXISTS (
            SELECT 1
            FROM dc_distributions dd
            WHERE dd.platform_person_internal_id = ra.platform_person_internal_id
              AND dd.activity_reference_number_id = ra.activity_reference_id
              AND dd.client_id = ra.client_id
              AND dd.platform_id = ra.platform_id
              
        )
),



person_activity AS (
	SELECT 
		client_id,
		platform_person_internal_id,
		platform_id,
		activity_id,
		activity_reference_id,
		activity_status,
		last_day(activity_effective_date) AS activity_end_date
	FROM 
		activity_data activity
	INNER JOIN DateRange
		ON activity_effective_date >= cal_begin_date 
		AND activity_effective_date <= cal_end_date
	WHERE 
		activity_status = 'CPLT' 
		AND activity.domain = 'DC'
	)	
,		
join_distribution_bal AS (
    SELECT
        DIS.client_id,
        DIS.platform_person_internal_id,
        DIS.plan_id,
		DIS.gross_distribution_amount,
		DIS.activity_reference_number_id,
		DIS.payment_end_date,
		CASE 
			WHEN CCR.BASE_ELMNT_ID = 100780
				THEN 'Hardship Withdrawals'
			WHEN CCR.BASE_ELMNT_ID in (101830,100790,101810,102050)
				THEN 'Non Hardship Withdrawals'
			ELSE 'Others'
			END EVNT_TX
    FROM dc_distributions DIS
    INNER JOIN person_activity activity 
    ON DIS.client_id = activity.client_id
	AND DIS.activity_id = activity.activity_id 
    AND DIS.platform_person_internal_id = activity.platform_person_internal_id
    AND DIS.activity_reference_number_id = activity.activity_reference_id
	AND DIS.payment_end_date = activity.activity_end_date
	AND DIS.platform_id = activity.platform_id
	LEFT JOIN Join_ccr_act_ids CCR
    ON activity.client_id = CCR.client_id
    AND activity.activity_id = CCR.act_id  
)
,
join_distribution_prsn_bal AS (
Select 
        jpb.client_id, jpb.client_id_string,
        jpb.platform_person_internal_id,
        jpb.plan_id,
		DIS.gross_distribution_amount,
		DIS.activity_reference_number_id,
		jpb.plan_balance,
		jpb.hourly_salary_status,
        jpb.fulltime_parttime_status,
        jpb.union_name,
        jpb.gender,
        jpb.age_range,
        jpb.salary_range,
        jpb.tenure_range,
        jpb.plan_ldsc_tx,
		DIS.EVNT_TX,
		jpb.cal_end_date as reporting_month,
		jpb.row_level_security_filter_value,jpb.custom_filter_1, jpb.custom_filter_2, jpb.custom_filter_3, jpb.custom_filter_4, jpb.custom_filter_5
    FROM join_person_balance jpb
	INNER join join_distribution_bal DIS
    ON DIS.client_id = jpb.client_id
    AND DIS.platform_person_internal_id = jpb.platform_person_internal_id
    AND DIS.plan_id = jpb.plan_id
	AND DIS.payment_end_date = jpb.cal_end_date
	AND jpb.plan_balance > 0
	WHERE evnt_tx in ('Non Hardship Withdrawals', 'Hardship Withdrawals')
)
   
    SELECT
        client_id, client_id_string,
		plan_id,
        plan_ldsc_tx,
		reporting_month,
        count(distinct case when EVNT_TX = 'Hardship Withdrawals' then platform_person_internal_id end) as num_ppt_hardship_withdrawal,
		count(distinct case when EVNT_TX = 'Non Hardship Withdrawals' then platform_person_internal_id end) as num_ppt_non_hardship_withdrawal,
		count(distinct case when EVNT_TX = 'Hardship Withdrawals' then activity_reference_number_id end) as count_hardship_withdrawal,
		SUM(case when EVNT_TX = 'Hardship Withdrawals' then gross_distribution_amount end) as hardship_dollar_amount,
		hourly_salary_status,
        fulltime_parttime_status,
        union_name,
        gender,
        age_range,
        salary_range,
        tenure_range,
		row_level_security_filter_value,custom_filter_1, custom_filter_2, custom_filter_3, custom_filter_4, custom_filter_5
	from join_distribution_prsn_bal
	group by 
		client_id, client_id_string, 
        plan_id,
        plan_ldsc_tx,
		reporting_month,
		hourly_salary_status,
        fulltime_parttime_status,
        union_name,
        gender,
        age_range,
        salary_range,
        tenure_range,
		row_level_security_filter_value,custom_filter_1, custom_filter_2, custom_filter_3, custom_filter_4, custom_filter_5