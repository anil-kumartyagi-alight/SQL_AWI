-- percentage_hardship_reason = number_hardship_reasons/ tot_hardship_reason

WITH mv_person
AS (
	SELECT DISTINCT global_client_id
		,global_person_id
		,client_id
		,client_id_string
		,platform_id
		,begin_date
		,end_date
		,platform_person_internal_id
		,gender
		,birth_date
		,person_reason_code
		,union_name
	FROM person_rpt.person
	WHERE person_reason_code = 'Employee'
		AND begin_date <= last_day(<<$pEndDate>>)
		AND end_date >= last_day(<<$pEndDate>>)
		AND client_id =cast(<<$pClientId>> as int)
	)
	,mv_person_employment
AS (
	SELECT DISTINCT global_client_id
		,global_person_id
		,client_id
		,platform_person_internal_id
		,platform_id
		,expected_annual_base_salary
		,hourly_salary_status
		,fulltime_parttime_status
		--,employment_status
		,hire_date
		,termination_date
		,standard_value AS employment_status
	FROM person_rpt.person_employment pe
	LEFT OUTER JOIN adlfound_itg.standard_rollups_lookup rl
	ON pe.standard_employment_status_code = rl.standard_key
	AND standard_group_key in ('EMPL-STAT-CD-ROLLUP1')
	WHERE --upper(trim(employment_status)) in  ('ACTIVE')
		begin_date <= last_day(<<$pEndDate>>)
		AND end_date >= last_day(<<$pEndDate>>)
		AND client_id =cast(<<$pClientId>> as int)
	),
    psf
AS (
				select * from person_itg.person_security_filter 
				where client_id =cast(<<$pClientId>> as int) 

				
				)
				, pcf
AS (
				select * from person_itg.person_custom_filter 
				where client_id =cast(<<$pClientId>> as int) 
				and data_product = 'DB'
				)
	,person
AS (
	SELECT p.global_client_id
		,p.global_person_id
		,p.client_id
		,p.client_id_string
		,p.platform_id
		,p.begin_date
		,p.end_date
		,p.platform_person_internal_id
		,e.expected_annual_base_salary
		,e.hourly_salary_status
		,e.fulltime_parttime_status
		,e.employment_status
		,p.person_reason_code
		,p.union_name
		,p.gender
		,floor(CASE 
			WHEN p.birth_date IN (
					'1800-01-01'
					,'1900-01-01'
					,'1901-01-01'
					,'1910-01-01'
					,'1930-01-01'
					)
				THEN NULL
			ELSE ROUND(DATEDIFF(DAY, p.birth_date, last_day(<<$pEndDate>>)) / 365.25, 2)
			END) AS age
		,CASE 
			WHEN p.person_reason_code = 'Employee'
				AND upper(e.employment_status) = 'ACTIVE'
				THEN ROUND(DATEDIFF(DAY, e.hire_date, last_day(<<$pEndDate>>)) / 365.25, 2)
			WHEN p.person_reason_code = 'Employee'
				AND upper(e.employment_status) <> 'ACTIVE'
				AND e.termination_date IS NOT NULL
				AND EXTRACT(YEAR FROM e.termination_date) <> 2299
				THEN ROUND(DATEDIFF(DAY, e.hire_date, e.termination_date) / 365.25, 2)
			ELSE NULL
			END AS tenure,
			psf.row_level_security_filter_value,
    pcf.custom_filter_1, pcf.custom_filter_2, pcf.custom_filter_3, pcf.custom_filter_4, pcf.custom_filter_5	
	FROM mv_person p
	left JOIN mv_person_employment e ON p.client_id = e.client_id
		AND p.platform_person_internal_id = e.platform_person_internal_id
		AND p.platform_id = e.platform_id
		--AND p.global_client_id = e.global_client_id
		--AND p.global_person_id = e.global_person_id
		AND p.client_id =cast(<<$pClientId>> as int)
		left join psf on p.platform_id = psf.platform_id
								and p.platform_person_internal_id = psf.platform_person_internal_id
								and p.client_id = psf.client_id 				
                
				left join pcf on p.platform_id = pcf.platform_id
								and p.platform_person_internal_id = pcf.platform_person_internal_id
								and p.client_id = pcf.client_id 
								and <<$pEndDate>> <= pcf.end_date
								and <<$pEndDate>> >= pcf.begin_date
	
	)
	
	,PRSN_PLANSTAT_DIMN01
AS (
	SELECT a.client_id AS CLIENT_ID
		,a.platform_person_internal_id AS PRSN_INTN_ID
		,a.category_id AS CAT_ID
		,a.begin_date AS PP_STAT_EFBEG_DT
		,a.end_date AS PP_STAT_EFEND_DT
		,a.plan_status_code AS PLAN_STAT_CD
		,a.participation_status_code AS prtc_stat_cd
		,a.platform_indicator_code AS PLFM_IND_CD
		,a.plan_id AS PLAN_ID
		,b.category_type_code AS CAT_TYPE_CD
		,MAX(begin_date) OVER (
			PARTITION BY a.client_id
			,a.plan_id
			,a.platform_person_internal_id
			,a.category_id
			) AS MAX_PP_STAT_EFBEG_DT
	FROM wealth_rpt.person_planstatus_dim a
	INNER JOIN wealth_rpt.dc_category_dim b ON a.client_id = b.client_id
		AND a.category_id = b.category_id
		AND a.plan_id = b.plan_id
	WHERE
		a.platform_indicator_code IN ('R3','R4','DCE') 
		AND b.category_type_code = 'PS'
		AND last_day(<<$pEndDate>>) >= a.begin_date
		AND last_day(<<$pEndDate>>) <= a.end_date
		AND b.category_definition_brand_code = 'PRTC-STAT'
		AND a.client_id =cast(<<$pClientId>> as int)
	)
	,PRSN_PLANSTAT_DIMN
AS (
	SELECT DISTINCT CLIENT_ID
		,PLAN_ID
		,CAT_ID
		,PRSN_INTN_ID
		,prtc_stat_cd
		,plfm_ind_cd
		--,CAT_TYPE_CD
		,MAX_PP_STAT_EFBEG_DT
	FROM PRSN_PLANSTAT_DIMN01
	WHERE MAX_PP_STAT_EFBEG_DT = PP_STAT_EFBEG_DT
	)
	,person_planstat
AS (
	SELECT p.global_client_id
		,p.global_person_id
		,p.client_id
		,p.client_id_string
		,p.platform_person_internal_id
		,p.expected_annual_base_salary
		,p.hourly_salary_status
		,p.fulltime_parttime_status
		,p.person_reason_code
		,p.union_name
		,p.gender
		,p.employment_status
		,p.age
		,p.tenure
		,d.prtc_stat_cd
		,d.plfm_ind_cd
		,d.plan_id,
        p.row_level_security_filter_value,
		 p.custom_filter_1, p.custom_filter_2, p.custom_filter_3, p.custom_filter_4, p.custom_filter_5	
	FROM prsn_planstat_dimn d
	INNER JOIN person p ON p.client_id = d.client_id
		AND p.platform_person_internal_id = d.prsn_intn_id
	WHERE d.plfm_ind_cd in ('R3','R4','DCE') 
		--AND UPPER(TRIM(p.employment_status)) in ('ACTIVE')
		AND UPPER(TRIM(prtc_stat_cd)) = 'ACTIVE'
	)
	,dc_plan_dimn
AS (
	SELECT client_id
		,plan_brand_code as plan_brnd_cd
		,plan_long_description as plan_ldsc_tx
		,plan_type_code as plan_type_cd
		,plan_id
	FROM wealth_rpt.dc_plan_dim
	WHERE client_id =cast(<<$pClientId>> as int)
		AND plan_type_code = 'DC'
	)
	,person_data
AS (
	SELECT a.client_id
	    ,a.client_id_string
		,a.platform_person_internal_id
		,a.expected_annual_base_salary AS salary
		,a.hourly_salary_status
		,a.fulltime_parttime_status
		,a.person_reason_code
		,a.union_name
		,a.gender
		,a.employment_status
		,(a.age) as age
		,(a.tenure) as tenure
		,a.prtc_stat_cd
		,a.plfm_ind_cd
		,a.plan_id
		,b.plan_brnd_cd
		,b.plan_ldsc_tx
		,b.plan_type_cd
		,a.row_level_security_filter_value,
    a.custom_filter_1, a.custom_filter_2, a.custom_filter_3, a.custom_filter_4, a.custom_filter_5
	FROM person_planstat a
	LEFT JOIN dc_plan_dimn b ON a.client_id = b.client_id
		AND a.plan_id = b.plan_id
	WHERE b.plan_type_cd = 'DC'
	)
	,range_lookup
AS (
	SELECT standard_group_key
		,standard_display_name
		,standard_min
		,standard_max
		,OWNER
	FROM adlfound_itg.standard_ranges_lookup
	)
	,dc_person_attributes
AS (
	SELECT a.client_id
	    ,a.client_id_string
		,a.platform_person_internal_id
		,a.hourly_salary_status
		,a.fulltime_parttime_status
		,a.person_reason_code
		,a.union_name
		,a.gender
		,a.employment_status
		,a.prtc_stat_cd
		,a.plfm_ind_cd
		,a.plan_id
		,a.plan_brnd_cd
		,a.plan_ldsc_tx
		,a.plan_type_cd
		,a.age
		,B.standard_display_name AS AGE_RANGE
		,a.TENURE
		,C.standard_display_name AS TENURE_RANGE
		,a.salary
		,D.standard_display_name AS SALARY_RANGE
		,a.row_level_security_filter_value
		,a.custom_filter_1, a.custom_filter_2, a.custom_filter_3, a.custom_filter_4, a.custom_filter_5
	FROM person_data a
	LEFT JOIN (
		SELECT *
		FROM range_lookup
		WHERE standard_group_key = 'AGE_RANGE_DC'
		) b ON floor(a.age) between (b.standard_min)
		AND cast(b.standard_max AS INT)
	LEFT JOIN (
		SELECT *
		FROM range_lookup
		WHERE standard_group_key = 'TENURE'
		) C ON floor(a.tenure) between (C.standard_min)
		AND (C.standard_max)
	LEFT JOIN (
		SELECT *
		FROM range_lookup
		WHERE standard_group_key = 'SALARY_RANGE_WEALTH'
		) D ON floor(a.salary) between (D.standard_min)
		AND (D.standard_max)
	)

	,dc_fund_balances
AS (
	SELECT fb.client_id
		,platform_person_internal_id
		,fb.plan_id
		,fb.fund_id
		,effective_date
		,closing_balance_amount
		,rollover_contribution_amount
	FROM wealth_rpt.dc_account_balances fb
	INNER JOIN wealth_rpt.hardbalance_dim hdm ON fb.client_id = hdm.client_id
		AND fb.plan_id = hdm.plan_id
		AND fb.fund_id = hdm.fund_id
	WHERE hdm.plan_type_code = 'DC'
		AND fb.client_id IN (cast(<<$pClientId>> as int))
		AND effective_date = last_day(<<$pEndDate>>)
	)
	,plan_balance
AS (
	SELECT j.client_id
		,j.platform_person_internal_id
		,j.plan_id
		,j.fund_id
		,closing_balance_amount AS planbalance
		,rollover_contribution_amount
	FROM dc_fund_balances j
	)
	,aggr_plan_balance
AS (
	SELECT client_id
		,platform_person_internal_id
		,plan_id
		,sum(planbalance) AS plan_balance
	FROM plan_balance
	GROUP BY client_id
		,plan_id
		,platform_person_internal_id
	)
	,join_person_balance
AS (
	SELECT DISTINCT p.client_id
	    ,p.client_id_string
		,p.platform_person_internal_id
		,p.salary
		,p.SALARY_RANGE
		,p.hourly_salary_status
		,p.prtc_stat_cd
		,p.fulltime_parttime_status
		,p.union_name
		,p.gender
		,p.age
		,p.AGE_RANGE
		,p.tenure
		,p.TENURE_RANGE
		,p.plan_id
		,p.plan_ldsc_tx
		,pb.plan_balance
		,p.plan_type_cd
		,last_day(last_day(<<$pEndDate>>)) as reporting_month,
		p.row_level_security_filter_value,p.custom_filter_1, p.custom_filter_2, p.custom_filter_3, p.custom_filter_4, p.custom_filter_5
	FROM dc_person_attributes p 
	LEFT JOIN aggr_plan_balance pb ON pb.client_id = p.client_id
		AND pb.plan_id = p.plan_id
		AND pb.platform_person_internal_id = p.platform_person_internal_id
	)
	,
        
Join_base_elmnt_id AS (
    SELECT 
        inst_elmnt.base_element_id AS base_elmnt_id,
        inst_elmnt.client_id AS client_id,
        inst_elmnt.data_instance_id AS data_inst_id
    FROM adlfound_itg.ccr_instance_element inst_elmnt
    WHERE inst_elmnt.client_id IN (cast(<<$pClientId>> as int)) 
    AND base_element_id IN (100780,101830, 101810, 100790,102050)
),
Join_ccr_act_ids AS (
    SELECT 
        ccr_inst.client_id AS client_id,
        base_elmnt.base_elmnt_id,
        TRIM(ccr_inst.provision_key_value) AS act_id
    FROM Join_base_elmnt_id base_elmnt
    INNER JOIN adlfound_itg.ccr_instance ccr_inst
    ON base_elmnt.client_id = ccr_inst.client_id
    AND base_elmnt.data_inst_id = ccr_inst.data_instance_id
    WHERE ccr_inst.base_provision_type_id = 1000000
),

hardship_reasons AS (
    SELECT 
        client_id,
        platform_person_internal_id,
        platform_indicator_code,
        plan_id,
        payment_result_effective_date,
		hardship_reason_code_1 as hardship_reason_code,
		activity_id,
		activity_reference_number_id
    FROM wealth_rpt.vw_dc_distributions
    WHERE payment_result_effective_date BETWEEN <<$pBeginDate>> AND <<$pEndDate>> AND 
		hardship_reason_1 <> ''
	UNION
	SELECT 
        client_id,
        platform_person_internal_id,
        platform_indicator_code,
        plan_id,
        payment_result_effective_date,
		hardship_reason_code_2 as hardship_reason_code,
		activity_id,
		activity_reference_number_id
    FROM wealth_rpt.vw_dc_distributions
    WHERE payment_result_effective_date BETWEEN <<$pBeginDate>> AND <<$pEndDate>> AND 
	hardship_reason_2 <> ''
	UNION 
	SELECT 
        client_id,
        platform_person_internal_id,
        platform_indicator_code,
        plan_id,
        payment_result_effective_date,
		hardship_reason_code_3 as hardship_reason_code,
		activity_id,
		activity_reference_number_id
    FROM wealth_rpt.vw_dc_distributions
    WHERE payment_result_effective_date BETWEEN <<$pBeginDate>> AND <<$pEndDate>> AND 
	hardship_reason_3 <> ''
	),
	
join_distribution_bal AS (
    SELECT
        DIS.client_id,
        DIS.platform_person_internal_id,
        DIS.plan_id,
        DIS.activity_id,
		DIS.activity_reference_number_id,
		DIS.payment_result_effective_date,
		case when DIS.hardship_reason_code = 'EDU' THEN 'Education'
			when DIS.hardship_reason_code = 'EVI' THEN 'Eviction'
			when DIS.hardship_reason_code = 'FNRL' THEN 'Funeral Expenses'
			when DIS.hardship_reason_code = 'HOME' THEN 'Home Purchase'
			when DIS.hardship_reason_code = 'MED' THEN 'Medical'
			when DIS.hardship_reason_code = 'PRNC' THEN 'Damage To Principal Residence'
			when CCR.base_element_valid_value IN ('OTH') THEN 'Others'
			else null
		end as hardship_reason
    FROM hardship_reasons DIS
	LEFT OUTER JOIN (
		SELECT
			data_instance_id, 
			base_element_id, 
			base_element_valid_value, 
			client_valid_value, 
			maping_indicator_code,  
			client_id
		FROM
			adlfound_itg.ccr_instance_valid_value
		WHERE 
			base_element_id = 101840 AND
			maping_indicator_code = 'Y'
		) CCR 
		ON DIS.client_id = CCR.client_id
		AND DIS.hardship_reason_code = CCR.client_valid_value
	)
,
join_distribution_prsn_bal AS (
Select 
        jpb.client_id,
		jpb.client_id_string,
        jpb.platform_person_internal_id,
        jpb.plan_id,
        DIS.activity_id,
		DIS.activity_reference_number_id,
		last_day(DIS.payment_result_effective_date) as  reporting_month,
        jpb.prtc_stat_cd,
		jpb.plan_balance,
		jpb.hourly_salary_status,
        jpb.fulltime_parttime_status,
        jpb.union_name,
        jpb.gender,
        jpb.age,
        jpb.age_range,
        jpb.salary,
        jpb.salary_range,
        jpb.tenure,
        jpb.tenure_range,
        jpb.plan_ldsc_tx,
		jpb.prtc_stat_cd,
		DIS.hardship_reason,
		jpb.row_level_security_filter_value,jpb.custom_filter_1, jpb.custom_filter_2, jpb.custom_filter_3, jpb.custom_filter_4, jpb.custom_filter_5
    FROM join_person_balance jpb
	INNER join join_distribution_bal DIS
    ON DIS.client_id = jpb.client_id
    AND DIS.platform_person_internal_id = jpb.platform_person_internal_id
    AND DIS.plan_id = jpb.plan_id
	AND jpb.plan_balance > 0
	where hardship_reason is not null
)
Select client_id,
       client_id_string,
	plan_id,
	plan_ldsc_tx,
	reporting_month,
	hardship_reason,
	count(hardship_reason) as number_hardship_reasons,
	sum(count(hardship_reason)) over (partition by client_id,plan_id,plan_ldsc_tx,reporting_month
		) as tot_hardship_reason,
		row_level_security_filter_value,custom_filter_1, custom_filter_2, custom_filter_3, custom_filter_4, custom_filter_5
	FROM join_distribution_prsn_bal
	group by 
		client_id,
		client_id_string,
		plan_id,
		plan_ldsc_tx,
		reporting_month,
		hardship_reason,
		row_level_security_filter_value,custom_filter_1, custom_filter_2, custom_filter_3, custom_filter_4, custom_filter_5